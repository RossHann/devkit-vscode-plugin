/*
 * Copyright 2022 Huawei Technologies Co., Ltd
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

export const i18nZH = {
  common_term_nodata_available: '暂无数据',
  common_to_top: '回到顶部',
  common_term_parentheses: '（{0}）',
  common_term_sign_left: '（',
  common_term_sign_left_space: '（',
  common_term_sign_right: '）',
  common_term_sign_colon: '：',
  common_term_sign_quotation_left: '“',
  common_term_sign_quotation_right: '”',
  common_term_sign_comma: '，',
  common_term_sign_question: '？',
  common_term_sign_semicolon: '；',
  common_term_pro_name: '系统性能分析',
  common_term_mem_name: '系统诊断',
  common_tern_tunning_helper_name: '调优助手',
  common_term_welcome_tip: '分析系统性能，提供性能优化指导',
  home_top_infogrowth: '上鲲鹏社区，查看开发者新手成长路径',
  home_top_info0: '上鲲鹏社区，学习使用开发套件',
  home_top_info1: '查看鲲鹏性能分析工具详细指导文档',
  home_top_info6: '查看鲲鹏性能分析工具详细指导文档、代码样例',
  user_guide_link: '用户指南',
  home_top_info2: '有疑问？向专家咨询',
  home_top_info3: '有疑问？前往鲲鹏论坛',
  common_term_welcometo: '欢迎使用',
  common_term_login_name: '用户名',
  common_term_login_password: '密码',
  common_term_login_btn: '登录',
  common_term_login_error_info: ['用户名不能为空', '密码不能为空'],
  common_term_copyright: '版权所有 © 华为技术有限公司 2021 保留一切权利',
  common_term_user_info: ['用户管理', '操作日志', '修改密码', '退出'],
  common_term_lang_info: ['简体中文', 'English'],
  common_term_left_parentheses: '（',
  common_term_right_parentheses: '）',
  common_scope_replace_teml: '（{0}）',
  common_term_colon: '：',
  common_term_create_user: '创建用户',
  common_term_user_label: {
    name: '用户名',
    role: '角色',
    workspace: '工作空间',
    password: '密码',
    confirmPwd: '确认密码',
    adminPwd: '管理员密码',
    oldPwd: '旧密码',
    newPwd: '新密码',
    changePwd: '修改默认密码',
    managerPwd: '管理员密码'
  },
  export: '导出',
  exportPerf: '导出全景分析数据',
  exportTips: '下载需消耗较长时间，请确认是否继续下载？',
  exportTipsIE: '该功能在IE浏览器下可能出现问题，建议您使用chrome浏览器',
  exportWait: '全景分析数据导出后将自动下载文件',
  exportFail: '全景分析数据导出失败',
  tipsIE: '该功能在IE浏览器下可能出现问题，建议您使用chrome浏览器',
  tip_hyper_tuner_in_ie: '该工具在IE浏览器下部分功能可能出现问题，建议您使用chrome浏览器',
  reDownload: '重新下载',
  project_manage: '工程管理',
  restart: '重启',
  setting: '配置',
  modalSetting: '模板配置',
  sysSetting: '系统配置',
  startTime: '采集开始时间',
  endTime: '采集结束时间',
  dataSize: '采集数据大小（MiB）',
  collection_size: '采集文件大小（MiB）',
  name: '名称',
  about: '关于',
  home: '主页',
  common_term_preBlock: '上一个代码块',
  common_term_nextBlock: '下一个代码块',
  common_term_operate: '操作',
  common_term_statement: '免责声明',
  common_term_agree: '确认',
  common_term_Signed: '取消',
  common_term_read: '我已阅读以上内容',
  common_term_view: '查看',
  common_term_operate_del: '删除',
  common_term_operate_reset: '重置密码',
  common_term_operate_ok: '确认',
  common_term_operate_cancel: '取消',
  common_term_operate_close: '关闭',
  common_term_operate_apply: '应用',
  common_term_delete_content: '删除工程后，该工程相关的数据会被删除，请谨慎操作',
  common_term_delete_content_contains_scheduled_tasks: '该工程包含未执行的预约任务，点击确认后，所有相关数据都会被删除，请谨慎操作',
  common_term_delete_title: '删除工程',
  common_term_delete_content_analysis: '删除任务后，该任务相关的数据会被删除，请谨慎操作',
  common_term_delete_title_analysis: '删除任务',
  common_term_delete_title_appointment: '删除预约任务',
  sureDeleteOne: '请确认是否删除',
  sureDeleteTwo: '确认删除以下预约任务？',
  common_term_delete_content_appointment: '删除后，该预约任务将无法恢复，请谨慎操作',
  common_term_log_user: '操作用户',
  common_term_log_ip: '操作主机IP',
  common_term_log_event: '操作名称',
  common_term_log_result: '操作结果',
  common_term_log_time: '操作时间',
  common_term_log_Detail: '操作详情',
  common_term_source_path: '源代码路径',
  common_term_operate_add_pro: '单击创建新工程',
  common_term_operate_add_project: '新建工程',
  common_term_operate_edit: '修改',
  common_term_projiect_name: '工程名称',
  common_term_projiect_name_null: '输入不能为空',
  common_term_input_greater: '输入值不能超过{0}',
  common_term_input_less: '输入值不能小于{0}',
  common_term_projiect_owning_Tool: '所属工具',
  common_term_projiect_name1: '工程名称',
  common_term_name: '用户名称',
  common_term_projiect_name_tip: '工程名称只能由字母、数字、特殊字符（@#$%^&*()[]<>._-!~+空格）组成，长度为1~32个字符',
  common_term_operate_search: '请输入关键字',
  common_term_projiect_function: '函数',
  common_term_projiect_task: '分析任务',
  common_term_projiect_task_system: '系统',
  common_term_projiect_task_process: '进程',
  common_term_projiect_task_function: '函数',
  common_term_user_changePwd: '修改默认密码',
  common_term_projiect_view_more: '查看更多',
  common_term_task_new: '新建分析任务',
  common_term_report_new: '新建联动分析任务',
  common_term_report: '联动分析',
  common_term_normal: '普通分析',
  common_term_task_edit: '修改分析任务',
  common_term_task_restart: '重启分析任务',
  common_term_task_c: 'C/C++程序',
  common_term_task_java: 'Java Mixed-Mode',
  common_term_task_name: '任务名称',
  common_term_two_name: '二进制符号文件路径',
  common_term_no1_name: '对象1',
  common_term_no2_name: '对象2',
  common_term_task_type: '任务类型',
  common_term_task_status: '任务状态',
  common_term_task_fail_reason: '失败原因',
  common_term_task_time: '执行时间（s）',
  common_term_task_analysis_type: '分析类型',
  common_term_task_start_time: '创建时间',
  common_term_task_run: '启动',
  common_term_task_stop: '取消',
  common_term_task_nodata3: '暂未选择相关对象',
  common_term_task_nodata2: '无数据',
  common_term_task_nodata: '无数据',
  common_term_lock_nodata: '无数据，请点击左侧锁与等待函数查看对应调用点信息',
  common_term_task_new_c: '新建C/C++程序分析任务',
  common_term_task_new_sys: 'New System Analysis ',
  common_term_task_new_java: '新建Java Mixed-Mode分析任务',
  common_term_task_edit_c: '修改C/C++程序分析任务',
  common_term_task_edit_java: '修改Java Mixed-Mode分析任务',
  common_term_task_start_now: '立即执行',
  common_term_task_start_analysis: '立即分析',
  common_term_task_type_launch: '启动采集任务时同时启动应用，采样时长由应用的执行时间决定，适用于应用运行时间较短的场景',
  common_term_task_c_app: '输入待分析目标应用的绝对路径。如分析“/root/test_lq”路径下的“cache_hit”应用，则填写“/root/test_lq/cache_hit”',
  common_term_task_java_app: '输入与应用程序相匹配的Java虚拟机的绝对路径',
  common_term_task_type_attach: '启动采集任务时应用正在运行，采样时长由配置参数控制，适用于应用运行时间较长的场景',
  common_term_task_type_profile: '采集整个系统的数据分析，无需关注系统中有哪些类型的应用在运行，采样时长由配置参数控制，适用于多业务混合运行和有子进程的场景',
  common_term_task_type_app: '采集指定应用或进程的数据进行分析',
  common_term_task_start_path: '与应用路径保持一致',
  common_term_task_start_custerm: '自定义',
  common_term_task_start_high_precision: '高精度',
  common_term_task_crate_path: '应用',
  common_term_task_crate_app_path: '应用路径',
  common_term_task_crate_parameters: '应用参数',
  common_term_task_crate_app_runUser: '应用运行用户',
  common_term_task_crate_app_runUser_pwdPlaceholder: '请输入拉起应用的系统用户',
  common_term_task_crate_app_user: '用户名',
  common_term_task_crate_app_passWord: '密码',
  common_term_task_crate_app_passWord_pwdPlaceholder: '请输入密码',
  common_term_task_crate_work_director: '工作目录',
  common_term_task_crate_interval_ms: '采样间隔',
  common_term_task_crate_s: 's',
  common_term_task_crate_ms: 'ms',
  common_term_task_crate_us: 'us',
  common_term_task_crate_bs_path: '二进制/符号文件路径',
  common_term_task_crate_fh_path: '符号文件路径',
  common_term_task_crate_c_path: 'C/C++源文件路径',
  common_term_task_crate_java_path: 'Java源文件路径',
  common_term_task_crate_duration: '采样时长（s）',
  common_term_task_crate_duration_range: '（1~300）',
  common_term_task_crate_tuningHelper_duration_range: '（2~300）',
  common_term_task_crate_pid: 'PID',
  common_term_task_crate_tid: 'TID',
  common_term_task_crate_pid_tid: 'PID',
  common_term_task_tab_congration: '任务信息',
  common_term_task_tab_log: '任务日志',
  common_term_task_tab_summary: '总览',
  common_term_task_tab_pcie: 'PCIe拓扑信息',
  common_term_task_tab_pcie_notsupport: '该功能在IE浏览器上暂不支持，请您切换到Chrome或Edge浏览器使用',
  common_term_task_tab_function: '函数',
  common_term_task_tab_graph: '火焰图',
  common_term_task_tab_graph_hot: '热火焰图',
  common_term_task_tab_graph_cold: '冷火焰图',
  common_term_task_tab_log_basic: '采集过程',
  common_term_task_tab_log_data: '数据分析',
  common_term_task_tab_summary_statistics: '统计',
  common_term_task_tab_summary_launch_time: '运行时长（s）',
  common_term_task_tab_summary_other_time: '数据采样时长（s）',
  common_term_task_tab_summary_cycles: '时钟周期',
  common_term_task_tab_summary_cycles_mix: '时钟周期（占比）',
  common_term_task_tab_summary_cyclesProportion: '时钟周期百分比',
  common_term_task_tab_summary_instructions: '指令数',
  common_term_task_tab_summary_instructionProportion: '指令数百分比',
  common_term_task_tab_summary_ipc: 'IPC',
  common_term_task_tab_summary_modulePath: '模块路径',
  common_term_task_tab_summary_info: '平台信息',
  common_term_task_tab_summary_info1: '采集信息和平台信息',
  common_term_task_tab_summary_system: '操作系统',
  common_term_task_tab_summary_name: '主机名',
  common_term_task_tab_summary_size: '采集数据大小 （MiB）',
  common_term_task_tab_summary_start: '采集开始时间',
  common_term_task_tab_summary_end: '采集结束时间',
  common_term_task_tab_summary_top10: 'Top 10热点函数',
  common_term_task_tab_summary_function: '函数',
  common_term_task_tab_summary_module: '模块',
  common_term_task_tab_summary_thread: '线程',
  common_term_task_tab_summary_core: '核',
  common_term_task_tab_summary_class: '类',
  common_term_task_tab_summary_method: '方法',
  common_term_task_tab_summary_callstack: '调用栈',
  common_term_task_tab_summary_times: '执行时间（s）',
  common_term_task_tab_function_hard: '硬件事件',
  common_term_task_tab_function_total: '总数',
  common_term_task_tab_function_name: '文件名',
  common_term_task_tab_function_source: '源代码',
  common_term_task_tab_function_source_line: '源代码行号',
  common_term_task_tab_function_source_code: '源代码',
  common_term_task_tab_function_count: '数量（占比）',
  common_term_task_tab_function_assembley: '汇编代码',
  common_term_task_tab_function_assembley_address: '汇编指令地址',
  common_term_task_tab_function_assembley_line: '代码行号',
  common_term_task_tab_function_assembley_code: '汇编指令',
  common_term_task_tab_function_flow: '代码流',
  common_term_task_tab_function_source_file_path: '源代码文件路径不存在',
  common_term_admin_user: '用户管理',
  common_term_user_all: '全选',
  log: '日志',
  common_term_admin_log: '操作日志',
  common_term_manage_log: '日志管理',
  common_term_admin_change_pwd: '修改密码',
  common_term_admin_log_out: '退出',
  common_term_admin_user_normal: '普通用户',
  common_term_admin_user_guest: '只读用户',
  common_term_admin_user_create: '新建',
  common_term_admin_user_create_title: '新建用户',
  common_term_admin_user_notAllowEdit: '用户创建后用户名不支持修改',
  common_term_admin_user_edit_user: '重置密码',
  common_term_admin_user_name: '用户名',
  common_term_admin_user_role: '角色',
  common_term_admin_user_edit: '重置密码',
  common_term_admin_user_delete_title: '删除用户',
  common_term_admin_user_delete_detail: '删除用户后，该用户相关的历史数据都会被删除，请谨慎操作',
  common_term_admin_user_edit_title: '确认修改该用户？',
  common_term_admin_user_add_title: '确认创建该用户？',
  message_offline_tips_title: '请处理离线状态节点',
  message_offline_tips_context: '当前工程有节点为离线状态，无法新建分析任务，请处理',
  message_close: '关闭',
  modifySchedule: '修改预约任务',
  common_term_another_nodename: '节点别名',
  common_term_another_name: '别名',
  common_term_node_ip: '节点IP',
  common_term_node_status: '节点状态',
  common_term_execution_status: '执行状态',
  common_term_return: '返回',
  common_term_return_home: '返回主界面',
  common_term_help: '联机帮助',
  common_term_guide: '新手引导',
  common_term_certificate: '生成证书',
  common_term_certificate_tip: '证书过期后，请点击“生成证书”按钮生成证书，并更换节点证书，否则节点将处于离线状态',
  common_term_certificate_tip_ssh: '证书管理使用服务器默认的SSH传输通道，为了保护数据的安全完整，建议使用安全的SSH服务，如使用安全的SSH版本，配置使用安全的加密算法等',
  common_term_nodeManage_tip_ssh: '节点管理使用服务器默认的SSH传输通道，为了保护数据的安全完整，建议使用安全的SSH服务，如使用安全的SSH版本，配置使用安全的加密算法等',
  common_term_noCallStackInfo: '无调用栈信息',
  common_term_bigdata: '大数据测试工具配置文件路径',
  common_term_distributed_path: '分布式存储组件配置文件路径',
  feedback: '建议反馈',
  common_term_password_check: '请输入管理员密码',
  passwordDic: '弱口令字典',
  weakPasswordTip: '密码如果被设置或修改为弱口令字典中的口令，系统会强制用户重新设置，以提升用户系统的安全性',
  keyUpdate: '工作密钥更新',
  status_Created_init: '初始化',
  status_Created: '未启动',
  status_Waiting: '等待中',
  status_Sampling: '采集中',
  status_Analyzing: '分析中',
  status_Stopping: '停止中',
  status_Aborted: '中止',
  status_Failed: '失败',
  status_Completed: '已完成',
  status_Online: '在线',
  status_Offline: '离线',
  status_Cancelled: '已取消',
  status_Cancelling: '取消中',
  status_Yes: '是',
  status_No: '否',
  common_term_task_detail: '任务详情',
  common_term_task_failed: '任务失败',
  common_term_task_analysis_failed: '任务分析失败',
  common_term_task_analysis_canceled: '任务已取消',
  plugins_term_project_add_success: '创建工程{0}成功',
  plugins_term_project_add_failed: '创建工程{0}失败',
  plugins_term_project_modify_success: '修改工程{0}成功',
  plugins_term_project_modify_failed: '修改工程{0}失败',
  plugins_term_task_immediateAnal_success: '任务{0}分析成功',
  plugins_term_task_immediateAnal_failed: '任务{0}分析失败',
  plugins_term_task_reanalyze_success: '任务{0}重启成功',
  plugins_term_task_reanalyze_failed: '任务{0}重启失败',
  plugins_term_task_modify_success: '任务{0}修改成功',
  plugins_term_task_create_success: '任务{0}创建成功',
  plugins_term_scheduleTask_create_success: '预约任务{0}创建成功',
  plugins_term_scheduleTask_modify_success: '预约任务{0}修改成功',
  memInfo: {
    space: {
      title1: '工作空间： ',
      title_total: '工作空间总容量',
      title2: '剩余工作空间:',
      title22: '剩余工作空间',
      title3: '建议剩余工作空间> ',
      title_suggestFree: '建议剩余工作空间',
      tip1: '请删除历史分析记录，释放空间',
      tip2: '剩余工作空间不足，请删除历史分析记录，释放空间',
    },
    disk: {
      title1: '磁盘总容量： ',
      title2: '剩余磁盘容量： ',
      title22: '剩余磁盘容量',
      title3: '建议剩余磁盘容量> ',
      title_suggestFree: '建议剩余磁盘容量',
      tip1: '请释放磁盘空间',
      tip2: '磁盘剩余空间不足，请释放磁盘空间',
    }
  },

  noSourceData: '跳转失败，找不到汇编指令或源码',

  function: { // 函数页签
    noChildren: '无数据，该{0}未采集到{1}',
  },

  task_info: {
    task_name: '任务名称：',
    analysis_object: '分析对象：',
    task_analysis_type: '分析类型：',
    diagnose_object: '诊断对象：',
    diagnose_content: '诊断内容：',
    diagnose_function: '诊断功能：',
  },

  tip_msg: {
    warn: '警告',
    logged_in: '用户已在其他地方登录',
    log_error: '获取日志信息失败',
    info_error: '获取信息失败',
    conf_error: '获取配置信息失败',
    opr_error: '操作失败',
    task_list_error: '获取任务列表失败',
    task_start_warn: '当前有任务正在执行中，请稍后启动',
    task_start_error: '采集任务启动失败',
    task_create_error: '创建任务失败',
    task_create_error_content: '创建任务失败，已存在相同任务',
    task_edit_error: '修改任务失败',
    task_disk_error: '磁盘空间不足',
    task_stop_error: '停止任务失败',
    task_del_error: '删除任务失败',
    total_results_error: '获取总体统计信息失败',
    plat_form_error: '获取平台及采集信息失败',
    top_function_error: '获取Top热点函数失败',
    log_timeout: '未登录或登录超时',
    request_timeout: '网络超时',
    log_ok: '登录成功',
    create_ok: '创建成功',
    edite_ok: '修改成功',
    edite_error: '修改失败',
    common_term_task_crate_mask_tip: '请输入CPU核编号。例如2-5，2,3,4,5或2,3,4-5',
    common_term_task_crate_server_mask_tip: '请输入CPU核编号。例如2-5',
    delete_ok: '删除成功',
    delete_error: '删除失败',
    add_ok: '添加成功',
    add_error: '添加失败',
    get_flame_error: '获取火焰图失败',
    reset_pwd_error_old: '修改密码失败，请输入正确的旧密码',
    reset_pwd_error_repeat: '修改密码失败，新密码不能与旧密码相同',
    peoject_exist: '工程名称重复',
    common_term_task_crate_c_bs_tip: '（可选）输入二进制/符号文件的绝对路径',
    common_term_task_crate_c_source_tip: '（可选）输入C/C++源文件的绝对路径',
    common_term_task_crate_j_source_tip: '（可选）输入Java源文件的绝对路径',
    common_term_task_crate_j_source_tip_true: '输入Java源文件的绝对路径',
    common_term_file_path_error: '路径格式错误',
    system_setting_input_app_path_input_warn:
      '应用程序路径建议配置为 “/home/”、“/opt/”等，请不要配置为“/”、“/dev”、“/sys”、“/boot”等系统目录，否则可能导致系统异常。',
    system_setting_input_empty_judge: '输入不能为空',
    system_setting_input_format_judge: '路径格式错误，每层路径必须以“/”开头，以“/”结尾，文件名不能包含“^`/|;&$<>\!”等特殊字符，路径与路径之间用“;”分隔',
    system_setting_input_repeat_judge: '路径重复',
    system_setting_input_run_user_msg: '用户名只能由字母、数字、点、下划线及减号组成，其中数字、减号不能出现在首位，长度为1~128',
    system_setting_input_vaild_value: '请输入有效范围内的整数',
    system_setting_input_only_digits: '只允许输入正整数',
    system_setting_input_same_value: '修改值不能和当前值相同',
    system_setting_select_loglevel_tip: `
<b>日志级别用来表示日志信息的重要程度</b>
<br/>
DEBUG：调试级别，记录调试信息，便于开发人员或维护人员定位问题
<br/>
INFO：信息级别，记录服务正常运行的关键信息
<br/>
WARNING：警告级别，记录系统和预期的状态不一致的事件，但这些事件不影响整个系统的运行
<br/>
ERROR：一般错误级别，记录错误事件，但应用可能还能继续运行
<br/>
CRITICAL：严重错误级别，记录可能会导致系统崩溃的信息`
  },
  validata: {
    name_rule: '用户名只能由字母、数字、“-”、“_”组成，长度为6~32个字符，且必须以英文字母开头',
    name_req: '用户名不能为空',
    oldPwd_rule: '旧密码不能为空',
    task_name_rule: '任务名称只能由字母、数字、特殊字符（@#$%^&*()[]<>._-!~+空格）组成，长度为1~32个字符',
    pwd_rule: '密码必须包含大写字母、小写字母、数字以及特殊字符（`~!@#$%^&*()-_=+\\|[{}];:\'",<.>/?）中两种及以上类型的组合，长度为8~32个字符',
    pwd_rule2: '密码不能是用户名或用户名的倒序',
    pwd_rule3: '新密码不能是旧密码的逆序',
    pwd_rule4: '新密码不能与旧密码相同',
    pwd_conf: '两次密码输入不一致',
    req: '密码不能为空',
    function_name_tule: '函数名的值不能为 * 号',
    overRange: '请输入有效范围内的整数',
    integer_rule: '请输入0到100的整数',
    integer_rule1: '请输入大于0的整数',
    integer_rule2: '请分别输入3个大于0的整数，用空格隔开',
    networkPort: '只能由字母、数字组成，长度为2~15个字符',
  },

  error_inertval: '服务器内部错误',
  bad_request: '请求错误',
  first_login: '登录成功。为保障帐号安全，请修改初始默认密码',
  pwd_guoqi: '密码已超过有效期，请及时修改密码',
  login_error: '用户名或密码错误，您还有次输入机会',
  login_lock: '账户锁定，请10分钟后再尝试登录',
  login_10: '当前用户的会话数已达到上限（10个），请等待后重试',
  reset_pwd_ok: '修改密码成功，请使用新密码登录',
  ifLogout: '请确认是否退出当前用户？',
  logout: '退出登录',
  logout_ok: '退出登录成功',
  logout_error: '退出登录失败',
  selectPlace: '请选择一个选项',
  loading: '加载中',
  functiondetail_no_get_data: '未返回数据',
  function_error: '获取函数信息失败',
  secret_title: '确认允许新建分析任务？',
  secret_count: '工具将采集您的软件运行数据并关联源码，以便分析系统性能指标，给出调优建议，不会影响您的软件运行，也不会保留您的源码',
  secret_count_without_code: '工具将采集您的系统或软件运行数据，以便分析系统性能指标，给出调优建议，不会影响您的软件运行，也不会保留您的源码',
  system_busy: '系统繁忙，请稍后重试',
  application_not_exist: '应用不存在',
  application_not_access: '当前用户没有访问权限',
  cpu_mask_range: '待采样CPU核的取值范围为0~',
  cpu_mask_format: '待采样CPU核输入格式错误。示例：2-5 , 2,3,4,5或2,3,4-5',
  invalid_directory: '工作目录不存在',
  invalid_directory_common: '目录不存在',
  pid_not_exist: 'PID/TID不存在',
  task_name: '任务名称',
  invalid_application_permisson: '当前用户没有该应用的访问权限',
  invalid_directory_permisson: '当前用户没有该路径的访问权限',
  statement: {
    title: '您一旦确认本声明，即视为您理解并同意了本声明的全部内容：',
    content1: '1. 建议您在非生产环境使用本工具，避免影响生产业务运行',
    content2: '2. 使用过程中涉及的非工具本身验证功能所用的用户名和密码，不作他用，不会被保存在系统中',
    content3: '3. 您分析或操作前已确认您为应用程序的所有者或者已获得所有者的充足授权同意',
    content4: '4. 分析结果中可能包含您所分析应用的内部信息和相关数据，请妥善管理',
    content5: '5. 除非法律法规或双方合同另有规定，华为对分析结果不做任何明示或暗示的声明或保证，不对分析结果的适销性、满意度、非侵权性或特定用途适用性等做出任何保证或承诺',
    content6: '6. 您根据分析记录所采取的任何行为均应符合法律法规的要求，并由您自行承担风险',
    content7: '7. 未经所有者授权，任何个人或组织均不得使用应用程序及相关分析记录从事任何活动。华为不对由此造成的一切后果负责，亦不承担任何法律责任。必要时，将追究其法律责任',
  },
  cjava: {
    viewDetails: '查看函数详情',
  },
  sys: {
    environment: '运行时环境信息',
    baseInfo: '基础系统信息',
    memManage: '内存管理系统',
    storageConfig: '存储资源配置',
    networkConfig: '网口配置',
    performance: '性能',
    kernelParams: 'kernel内核相关参数',
    viewDetails: '查看详情',
    cpuType: 'CPU型号：',
    coreNum: 'Core数量：',
    memCap: '内存总大小：',
    memNum: '内存条数量：',
    nullNum: '空插槽数量：',
    totalNum: '总盘数',
    storageCap: '存储总量',
    netNum: '网卡数',
    netPort: '网口数：',
    perfDetail: '分析对象/指标',
    selectPerfDetail: '筛选分析对象/指标',
    typeAnalysisName: '系统性能全景分析',
    tab_name: '系统分析任务',
    creat_btn_title: '系统性能全景分析',
    creat_modal_title: '新建系统性能全景分析任务',
    edit_modal_title: '修改系统性能全景分析任务',
    interval: '采样间隔（s）',
    duration: '采样时长（s）',
    type: '采样类型',
    cpu: 'CPU',
    mem: '内存',
    disk: '存储IO',
    net: '网络IO',
    time: '最长采样时长为300s',
    douhao: '、',
    titles: {
      cpuUsage: 'CPU利用率',
      avgLoad: '平均负载',
      mem: '内存',
      memUsage: '内存使用情况统计',
      memPag: '分页统计',
      memSwap: '交换统计',
      diskBlock: '块设备利用率',
      net: '网络IO',
      netOk: '网络设备统计',
      netError: '网络设备故障统计'
    },
    sug: '优化建议',
    baseValue: '基准值',
    selCpu: '选择CPU核',
    selNUMA: '选择NUMA',
    averValue: '平均值',
    selBlock: '选择块设备',
    selNet: '选择网络接口',
    selZhibiao: '选择指标',
    download: '点击下载',
    copy: '复制URL地址',
    copy_success: '复制URL成功',
    tip: {
      CPU: 'CPU核（all表示整体）',
      '%user': '在用户态运行时所占用CPU总时间的百分比',
      '%nice': '在用户态改变过优先级的进程运行时所占用CPU总时间的百分比',
      '%sys': '在内核态运行时所占用CPU总时间的百分比。该指标没有包含服务硬件和软件中断所花费的时间',
      '%iowait': 'CPU等待存储I/O操作导致空闲状态的时间占CPU总时间的百分比',
      '%irq': 'CPU服务硬件中断所花费时间占CPU总时间的百分比',
      '%soft': 'CPU服务软件中断所花费时间占CPU总时间的百分比',
      '%idle': 'CPU空闲且系统没有未完成的存储I/O请求的时间占总时间的百分比',
      '%cpu': 'CPU使用率（非idle状态下的CPU使用率）',
      max_use: '显示采集时段内的最高使用率及时间点',
      'runq-sz': '运行队列的长度，即等待运行任务的数量',
      'rung-sz': '运行队列的长度，即等待运行任务的数量',
      'plist-sz': '在任务列表中的任务的数量',
      'ldavg-1': '最后1分钟的系统平均负载，计算为在指定时间间隔内，正在运行或可运行（R状态）任务的平均数量与不可中断睡眠状态（D状态）任务的平均数量之和',
      'ldavg-5': '过去5分钟的系统平均负载',
      'ldavg-15': '过去15分钟的系统平均负载',
      blocked: '当前阻塞的任务数，正在等待I/O完成',
      'memfree(KB)': '可用的空闲内存大小，以KB为单位。不包括缓冲区和缓存的空间',
      'avail(KB)': '可用的内存大小，以KB为单位。包括缓冲区和缓存的空间',
      'memused(KB)': '已使用的内存大小，以KB为单位。包括缓冲区和缓存的空间',
      '%memused': '已使用内存的百分比，即kbmemused/(kbmemused+kbmemfree)',
      'buffers(KB)': '内核已用作缓冲区的内存大小，以KB为单位',
      'cached(KB)': '内核已用作缓存的内存大小，以KB为单位',
      'active(KB)': '活跃内存大小，以KB为单位（最近已被使用的内存，除非绝对必要，通常不会被回收）',
      'inact(KB)': '非活跃内存大小，以KB为单位（内存最近很少使用，它更符合回收条件）',
      'dirty(KB)': '等待写回到磁盘的内存大小，以KB为单位',
      'pgpgin/s': '每秒从磁盘或SWAP置换到内存的字节数（KB）',
      'pgpgout/s': '每秒从内存置换到磁盘或SWAP的字节数（KB）',
      'fault/s': '每秒系统产生的缺页数，即主缺页与次缺页之和（major + minor），不是生成I/O的页面错误的计数，因为一些页面错误可以在没有I/O的情况下解决',
      'majflt/s': '每秒产生的主缺页数，需要从磁盘加载一个内存分页',
      'pgscank/s': '每秒被kswapd守护进程扫描的分页数量',
      'pgscand/s': '每秒直接被扫描的分页数量',

      '%vmeff': '分页回收效率的度量指标。 如果接近100％，那么几乎每个分页都可以在非活动列表的底部获取。如果它变得太低（例如，小于30%），那么虚拟内存有一些问题。如果在时间间隔内没有分页被扫描，则此字段为0',
      'pswpin/s': '系统每秒换入的交换分区页面总数',
      'pswpout/s': '系统每秒换出的交换分区页面总数',
      tps: '每秒I/O的传输总数。一个传输就是到物理设备的一个I/O请求。发送到设备的多个逻辑请求可以合并成单个I/O请求，传输大小是不确定的',
      'rd(KB)/s': '每秒从设备读取的带宽',
      'wr(KB)/s': '每秒写入到设备的带宽',
      'avgrq-sz': '平均每次存储I/O操作的数据大小（以扇区为单位）',
      'avgqu-sz': '磁盘请求队列的平均长度',
      'rkB/s': '每秒从设备读取的扇区数量。 扇区的大小为512字节',
      'wkB/s': '每秒写入到设备的扇区数量。 扇区的大小为512字节',
      'areq-sz': '平均每次存储I/O操作的数据大小（以扇区为单位）',
      'aqu-sz': '磁盘请求队列的平均长度',
      await: '从请求磁盘操作到系统完成处理，每次请求的平均消耗时间，包括请求队列等待时间，单位是毫秒，等于寻道时间+队列时间+服务时间',
      svctm: '系统处理每次请求的平均时间（以毫秒为单位），不包括在请求队列中消耗的时间',
      '%util': '在I/O请求发送到设备期间所消耗的CPU时间百分比（设备的带宽使用率）。当该值接近100％时说明磁盘读写将近饱和',
      'rxpck/s': '每秒接收的数据包总数',
      'txpck/s': '每秒传输的数据包总数',
      'rxkB/s': '每秒接收的字节总数，单位为KB',
      'txkB/s': '每秒传输的字节总数，单位为KB',
      eth_ge: '网口标准速率，100GE，50GE，40GE，10GE等',
      'rxerr/s': '每秒接收到的损坏的数据包数量',
      'txerr/s': '当发送数据包时，每秒发生错误的总数',
      'coll/s': '当发送数据包时，每秒发生冲突的数量',
      'rxdrop/s': '当Linux缓冲区满的时候，网卡设备接收端每秒钟丢弃的数据包的数量',
      'txdrop/s': '当Linux缓冲区满的时候，网络设备发送端每秒钟丢弃的网络包的数量',
      'txcarr/s': '当发送数据包时，每秒发生载波错误的次数',
      'rxfram/s': '当接收数据包时，每秒发生帧同步错误的次数',
      'rxfifo/s': '在接收数据包时，每秒发生FIFO溢出错误的次数',
      'txfifo/s': '当发送数据包时，每秒发生FIFO溢出错误的次数',
      max_tps: '每秒I/O传输总数的最大值',
      max_util: '显示消耗CPU的最大百分比',
      DEV: '块设备名称',
      IFACE: '网络接口名称',
      interleave_hit: '按interleave策略成功分配到该node上的内存页个数',
      local_node: '运行在该节点的进程成功在这个节点上分配到的内存页个数',
      numa_foreign: '进程优选从当前节点分配内存页，但实际上却从其他节点分配到的内存页个数。与“numa_miss”相对应',
      numa_miss: '进程优选从其它节点分配内存页，但是实际上却从当前节点分配到的内存页个数。与“numa_foreign”相对应',
      numahit: '进程优选从当前节点分配并成功分配到的内存页个数',
      other_node: '运行在其它节点的进程优选从当前节点分配并成功分配到的内存页个数',
      os_config_smmu: 'SMMU用于外设在读写内存时，将虚拟地址转为物理地址。如果关闭SMMU，则由内核将虚拟地址转为物理地址后传给外设。如果打开SMMU，那么外设收到的是虚拟地址，每次读写内存时，需要通过SMMU才能读取实际的物理地址。因为外设通过SMMU访问内存时，都要通过SMMU进行一次虚拟地址和物理地址的转换，从而多了一次地址转换的过程，导致性能变慢，所以建议关闭。 但在虚拟化场景下，必须打开SMMU。SMMU在虚拟化场景中主要支持虚拟地址（VA）到中间物理地址（IPA）以及中间物理地址（IPA）到物理地址（PA）的地址转换。如果关闭SMMU，三级地址转换需要使用纯软件进行转换，性能较低。 修改方法（以CentOS为例）： 进入BIOS界面，选择“Advanced > MISC Config > Support Smmu”进行设置。',
      os_config_huge_page: '标准大页。目的是使用更大的内存页面（memory page size） 以适应越来越大的系统内存，让操作系统可以支持现代硬件架构的大页面容量功能。管理是预分配的方式。',
      os_config_transparent_huge_page: '透明大页。管理则是动态分配的方式。',
      os_config_dirty_expire: '用于标识脏数据在缓存中允许保留的时长，即时间到后需要被写入到磁盘中。如果业务的数据是连续性的写，可以适当调小此参数，这样可以有效避免IO集中，导致突发的IO等待。 修改方法（以CentOS为例）： # echo 2000 > /proc/sys/vm/dirty_expire_centisecs',
      os_config_background_ratio: '脏页面占用总内存最大的比例（以memfree+Cached-Mapped为基准），超过这个值，pdflush线程会刷新脏页面到磁盘。增加这个值，系统会分配更多的内存用于写缓存，因而可以提升写磁盘性能。但对于磁盘写入操作为主的业务，可以调小这个值，避免数据积压太多最后成为瓶颈，可以结合业务并通过观察await的时间波动范围来识别。 修改方法（以CentOS为例）： echo 8 > /proc/sys/vm/dirty_background_ratio',
      os_config_dirty_ratio: '表示脏页面占用总内存最大的比例，超过这个值，系统不会新增加脏页面，文件读写也变为同步模式。文件读写变为同步模式后，应用程序的文件读写操作的阻塞时间变长，会导致系统性能变慢。对于写入为主的业务，可以增加此参数，避免磁盘过早的进入到同步写状态。 修改方法（以CentOS为例）： echo 40 > /proc/sys/vm/dirty_ratio',
      os_config_dirty_writeback: '控制内核的脏数据刷新进程pdflush的运行间隔，单位是1/100秒。缺省数值是500 ，也就是5秒。如果系统是持续地写入动作，那么需要降低该值，这样可以把尖峰的写操作削平成多次写操作。如果系统是短期地尖峰式的写操作，并且写入数据不大（几十M/次）且内存有比较多富裕，那么应该增大此数值。每秒钟接收的压缩包数据包。',
      os_config_swappiness: '表示交换分区门限。swappiness=0的时候表示最大限度使用物理内存，然后才是swap空间，swappiness＝100的时候表示积极的使用swap分区，并且把内存上的数据及时的搬运到swap空间里面。linux的基本默认设置为60, 也就是内存在使用到100-60=40%的时候，就开始出现有交换分区的使用。内存的速度会比磁盘快很多，SWAP会加大系统IO，同时造的成大量页的换进换出，严重影响系统的性能。',
      os_config_HZ: 'CPU频率，即CPU的时钟频率，是指CPU运算时的工作的频率，单位是Hz。',
      os_config_nohz: '在Linux内核2.6.17版本之前，Linux内核为每个CPU设置一个周期性的时钟中断，Linux内核利用这个中断处理一些定时任务，如线程调度等。这样导致就算CPU不需要定时器的时候，也会有很多时钟中断，导致资源的浪费。Linux内核2.6.17版本引入了nohz机制，实际就是让时钟中断的时间可编程，减少不必要的时钟中断，所以建议打开。'
    },
    scenes_bigData: '大数据测试工具路径',
    scenes_dds: '分布式存储组件配置文件路径',
    scenes_placeholder: '工具路径',
    scenes_tracing: '采集Tracing数据',
    tracingHold: '为待分析程序打入tracepoint信息才能采集Tracing数据',
    tracing_help: '查看指导',
    tracing_event: '采集事件格式',
    eventError: '采集事件格式错误。',
    inpu_eg: '如provider:tracepoint1,或直接输入provider:*',
    scenes_top: '采集Top活跃进程',
    topData: 'Top数据',
    traceTips: '基于LTTng-UST框架，采集应用程序的Tracing信息'
  },
  sys_cof: {
    sum: {
      download_csv: '下载csv',
      download_svg: '下载svg',
      download_html: '下载html',
      cpu: 'CPU',
      mem: '内存',
      disk: '硬盘',
      network: '网卡',
      pcie: 'PCIe卡',
      raid: 'RAID控制卡',
      firmware: '固件版本信息',
      normal_msg: '基本信息',
      storage_msg: '存储信息',
      storage_title: '存储信息',
      raid_level: 'RAID级别',
      noRaid: '未检测到RAID卡',
      file_system_msg: '文件系统信息',
      docker: '虚拟机/容器',
      bios: 'BIOS版本',
      cpld: 'CPLD版本',
      os: 'OS版本',
      kernel: 'kernel版本',
      jdk: 'JDK版本',
      glibc: 'glibc版本',
      smmu: 'SMMU',
      open: '开启',
      close: '关闭',
      page_size: '页表大小',
      tran_page: '透明大页',
      dirty_time: '脏数据缓存到期时间（单位1/100秒）',
      time_unit: '（单位1/100秒）',
      dirty_ratio: '脏页面占用总内存最大的比例',
      dirty_memratio: '脏页面缓存占用总内存最大的比例',
      hz_info: 'HZ值',
      nohz_info: 'nohz（定时器机制）',
      cpu_info: {
        cpu_core: 'CPU核数',
        cpu_name: 'CPU名称',
        cpu_type: 'CPU类型',
        cpu_max_hz: '最大频率',
        cpu_cur_hz: '当前频率',
        numa_node: 'NUMA节点',
        node_name: '节点',
        node: '节点',
        numa_core: 'CPU核',
        total_mem: '总内存大小',
        free_mem: '空闲内存大小',
        numa_node_dis: 'NUMA节点距离',
        numa_zero: 0,
        numa_one: 1,
        numa_two: 2,
        numa_three: 3,
      },
      mem_info: {
        mem_null: '空',
        normal_msg: '基本信息',
        total_mem: '系统可用内存',
        mem_slot_0: '内存插槽（SOCKET 0)',
        mem_slot_1: '内存插槽（SOCKET 1)',
        mem_list: 'DIMM列表',
        slot_site: '插槽位置',
        mem_cap: '容量',
        max_t: '最大速率',
        match_t: '配置速率',
      },
      disk_info: {
        disk_name: '设备名称',
        disk_model: '硬盘型号',
        disk_cap: '硬盘容量',
        disk_type: '硬盘类型',
      },
      pcie_info: {
        pcie_name: 'Device（B/D/F）',
        hard_id: '硬件ID',
        max_rate: '最大传输速率',
        cur_rate: '当前配置速率',
        max_load: '最大数据负载（字节）',
        pcie_details: '详细信息',
      },

      network_info: {
        irq_aggre_title: '中断聚合',
        offload_title: 'Offload',
        queue_title: '队列',
        numa_core_title: '中断NUMA绑核',
        network_name: '网卡名称',
        network_queue: '网卡队列',
        queue_num: '队列数',
        irq_aggre: {
          adaptive_rx: '接收队列的动态聚合执行开关',
          adaptive_tx: '发送队列的动态聚合执行开关',
          rx_usecs: '产生一个中断之前至少有一个数据包被发送之后的微秒数',
          tx_usecs: '产生一个中断之前至少有一个数据包被接收之后的微秒数',
          rx_frames: '产生中断之前发送的数据包数量',
          tx_frames: '产生中断之前接收的数据包数量',
        },
        offload: {
          rx_checksumming: '接收包校验和',
          tx_checksumming: '发送包校验和',
          scatter_gather: '分散/聚集功能',
          TSO: '当一个系统需要通过网络发送一大段数据时，计算机需要将这段数据拆分为多个长度较短的数据，以便这些数据能够通过网络中所有的网络设备，这个过程被称作分段。TCP分段卸载将TCP的分片运算交给网卡处理，\
          无需协议栈参与，从而降低CPU的计算量和中断频率，减轻CPU负荷，有时也被叫做 LSO (Large segment offload) 。如果网卡开启TSO功能，则同时也需要开启TCP校验计算和分散/聚集功能',
          UFO: '是一种利用网卡对UDP数据包分片，减轻CPU负荷的一种技术。在网卡硬件支持的情况下，建议开启',
          LRO: '通过将接收到的多个TCP数据聚合成一个大的数据包，然后传递给网络协议栈处理，以减少上层协议栈处理开销，提高系统接收TCP数据包的能力',
          GSO: '尽可能的推迟数据分片直至发送到网卡驱动之前，此时会检查网卡是否支持分片功能（如TSO、UFO）, \
          如果支持则直接发送到网卡，如果不支持就进行分片后再发往网卡。这样大数据包只需走一次协议栈，而不是被分割成几个数据包分别走，从而提高了效率',
          GRO: '基本思想跟LRO类似，克服了LRO的一些缺点，更通用。后续的驱动都使用GRO的接口，而不是LRO',

        },

        numa_core: {
          network_name: '网口队列名称',
          inter_id: '中断号',
          inter_info: '中断NUMA绑核信息',
          inter: '中断绑核信息',
          inter_info_tip: '中断绑核信息中显示的是绑定的CPU core ID',
          queue_send: '队列绑核信息',
          queue_receive: '接受队列绑核信息'
        },
        nic_buff: {
          nic_name: '网口名称',
          circle_buff: '环形缓冲区',
          rx_buff_size: '接收缓冲区大小',
          tx_buff_size: '发送缓冲区大小',
        }
      },
      raid_info: {
        raid_id: 'RAID控制器名称',
        raid_model: 'RAID控制器ID',
        raid_size: '缓存大小',
      },
      raid_level_info: {
        volume_name: '逻辑盘名称',
        volume_id: '逻辑盘ID',
        raid_id: 'RAID控制器ID',
        raid_level: 'RAID级别',
        volume_size: '逻辑盘条带大小',
        volume_read: '逻辑盘当前读策略',
        volume_write: '逻辑盘当前写策略',
        volume_cache: '逻辑盘缓存策略',
        cachecade: 'CacheCadence标识',
      },
      firmware_info: {
        bios_version: 'BIOS固件版本',
        bmc_version: 'BMC固件版本',
        drive_version: '硬盘固件版本',
        nic_version: '网卡固件版本',

      },
      storage_msg_info: {
        storange_name: '设备名称',
        storage_file: '硬盘文件预读大小（KB）',
        storage_file_suggest: '硬盘提前对文件读取，大小以字节为单位',
        storage_io: '存储IO调度机制',
        storage_io_suggest: '硬盘的读写规则'
      },
      file_info: {
        file_info_title: '文件系统信息',
        file_name: '分区名称',
        file_type: '文件系统类型',
        file_type_suggest: '文件系统类型',
        file_dot: '挂载点',
        file_dot_suggest: '挂载点',
        file_msg: '挂载信息',
      },
      virtual_info: {
        virtual_os: '虚拟机Libvirt版本 ',
        virtual_config: 'KVM虚拟机配置参数',
        virtual_docker: '容器版本'
      }

    },
    selct_title: '系统配置全景分析',
    analysisName: '系统配置全景分析',
    create_title: '新建系统配置全景分析任务',
    edit_title: '修改系统配置全景分析任务',
    type: '采样类型',
    check_types: {
      hard: '硬件',
      soft: '软件',
      env: '运行环境'
    }

  },
  sys_summary: {
    unit: {
      entry: '个'
    },
    net_subsystem_text: '网络子系统',
    mem_subsystem_text: '内存子系统',
    storage_subsystem_text: '存储子系统',
    net_subsystem_text_export: '网络子系统',
    mem_subsystem_text_export: '内存子系统',
    storage_subsystem_text_export: '存储子系统',
    panorama: {
      tip: {
        net_port_num: '网口数量',
        cpu_type: '型号',
        core_num: 'Core数量',
        max_freq: '最大频率',
        current_frqu: '当前频率',
        total_size: '总大小',
        dimm_num: '内存条数量',
        null_num: '空槽数量',
        total_cap: '总容量',
        disk_overview: '磁盘概览',
        circle_buff: `"收发环形缓冲区是用来存放SKB缓冲区的地址及大小（即收发描述符），其配置的合理与否可以从网口的统计信息指标rxdrop/s|txdrop/s、rxfifo/s|txfifo/s中体现，其中：
1. rxdrop/s|txdrop/s：表示数据包已进入环形缓冲区，但由于内存不够等系统原因，导致最终被丢弃
2. rxfifo/s|txfifo/s：表示由于环形缓冲区传输的IO大于内核能够处理的IO，导致网卡物理层将未进入环形缓冲区的数据包丢弃
其中CPU无法及时处理中断是造成环形缓冲区空间不足的原因之一`,
      }
    },
    mem_subsystem: {
      mem_total_size: '内存总大小',
      dimm_num: '内存条数量',
      null_num: '空槽数量',
      tip: {
        mem_name: '内存条',
        position: '位置',
        dimm_size: '容量',
        max_rate: '最大速率',
        allocated_rate: '配置速率',
        dimm_type: '类型',
      }
    },
    storage_subsystem: {
      disk_num: '总盘数',
      diskNum: '总盘数',
      storage_tatol: '存储总量',
      tip: {
        hard_disk: '硬盘',
        disk_type: '类型',
        disk_model: '型号',
        disk_size: '容量'
      }
    },
    cpupackage_tabel: {
      NUMA_name: 'NUMA平衡',
      virtual: '虚拟机和容器暂不支持',
      network_port: '网口',
      name: '名称',
      standard_page: '标准大页',
      partition: '交换分区',
      data_interval: '唤醒pdflush进程刷新脏数据间隔',
      idle: '最小保留的空闲内存大小',
      raid_config: 'RAID配置',
      Affinity: '磁盘请求亲和设置',
      line_up: '磁盘请求队列长度设置',
      depth: '磁盘队列深度',
      IO: 'IO合并',
      raid_group: 'RAID组：',
      stroug_volume: '存储卷：',
      avgLoad: ' CPU 平均负载',
      index: '指标',
      block: '块设备',
      interface: '接口',
      interface_error: '接口故障统计',
      interface_transmission: '接口传输数据量统计',
      statistics: 'NUMA内存统计',
      storyData: '存储大小',
      L3: 'L3 cache共享节点',
      rate: '速率',
      sysPro: '全景分析',
      fill_name: '文件系统：',
      page_number: '大页数量',
      portsFive: 'TOP5 接口',
      portsTen: 'TOP10 接口',
      delay: '延迟',
      NUMAnode: 'NUMA节点',
      drive: '内核驱动程序',
      model: '内核模块',
      equipment: '子系统',
      indexTps: '指标的值为采集时间段内的平均值',
      networkName: '网口名称',
      networkNoData: '虚拟机和容器暂不支持采集网卡信息',
      queueNoData: '容器暂不支持采集队列信息',
      aggregation: '虚拟机和容器暂不支持中断聚合',
      numaNuclear: '虚拟机和容器暂不支持中断NUMA绑核',
      raidNode: '虚拟机和容器暂不支持RAID控制卡',
      RaidNode: '虚拟机和容器暂不支持RAID级别',
      cpuDataConfig: '阈值设置',
      consumption: '能耗',
      power: '功率',
      powerUnits: '功率（W）',
      average: '平均功率',
      averageUnits: '平均功率（W）',
      maxPower: '最大功率（W）',
      minPower: '最小功率（W）',
    },
    tracing: {
      tag: 'Tracing数据',
      baseInfo: 'Tracing基础信息',
      title: 'Tracing数据样例',
      downloadTip: 'Tracing信息可以下载到本地并通过浏览器打开，方便对其进行更详细的分析',
      downloadbtn: '下载Tracing数据文件',
      file: 'Tracing文件',
      fileSize: '文件大小',
      exampleTip: '*此图为Tracing数据样例',
    },
    distributed: {
      Configuration: '硬件及软件配置',
      typicalConfig: '典型配置由鲲鹏大数据解决方案测试获得',
      solution: '典型配置由鲲鹏分布式存储解决方案测试获得',
      database: '典型配置由华为鲲鹏数据库解决方案测试获得',
      databaseType: '数据库类型：',
      correspond: '测试场景对应的硬件及软件配置',
      component: '组件',
      compSceneConfig: '测试场景配置',
      recommendation: '全量建议',
      hardConfig: '硬件配置',
      softConfig: '软件配置',
      applicationType: '应用类型：',
      componentInformation: '组件信息：',
      applicationScenario: '应用场景：',
      currentValue: '当前值',
      suggestedValue: '建议值',
      Suggestion: '建议说明',
      systemCongif: '系统配置项',
      componentConfig: '组件配置项',
      clickView: '点击查看',
      typicalConfiguration: '典型配置',
      topdata: 'top数据',
      typicalConfiguration_export: '典型配置',
      topdata_export: 'top数据',
      ip_addr: 'IP地址',
      node_character: '节点属性',
      mem_size_total: '内存总大小',
      per_mem_size: '单个内存大小',
      mem_speed: '内存速率',
      running_process: '运行进程',
      node_list: '节点列表',
      cpu_core_num: 'CPU核数',
      searcHold: '请输入您想搜索的组件',
    }
  },
  sys_res: {
    notSupprot: '</br>未开启kernel hacking配置项中Tracers选项及子选项，perf工具部分功能不可用',
    sum: {
      statistics: '统计',
      collection: '采集信息和平台信息',
      process: '进程/线程切换',
      cycles: '时钟周期',
      elapsed: '采样时长（s）',
      instrutions: '指令数',
      ipc: 'IPC',
      os: '操作系统',
      computer_name: '主机名',
      result_size: '剩余内存（MiB）',
      collection_start: '采集开始时间',
      collection_end: '采集结束时间',
      no: '序号',
      task: '任务',
      switches: '切换次数',
      average_delay: '平均调度延迟时间',
      max_delay: '最大调度延迟时间',
      max_delay_at: '最大延迟时间点',
    },

    selct_title: '系统资源调度分析',
    analysisName: '系统资源调度分析',
    create_title: '新建系统资源调度分析任务',
    edit_title: '修改系统资源调度分析任务',
    tab: {
      numa: 'NUMA节点切换',
      cpu: 'CPU调度',
      pro: '进程/线程调度'
    },
    core: 'CPU核',
    startTime: '开始时间',
    processName: '进程名称',
    PID: '进程ID',
    selectCPU: '选择CPU核',
    all: '全部显示',
    applicationSpecific: '应用相关',
    noDataIsCollected: '未采集到数据',
    selectTime: '选择时间段',
    selectTID: '选择线程ID',
    numaLegend: 'NUMA节点配置信息',
    numaSwitch: 'NUMA节点切换',
    numaColumn: {
      no: '线程号',
      task: '任务',
      swtich: '切换次数'
    },
    swtichDetail: 'NUMA节点切换详情',
    conversion: '切换路径',
    frequency: '切换次数',
    viewSwtichDetail: '查看切换详情',
    waitingDuration: '等待时长',
    scheduleDelay: '调度延迟',
    threadName: '线程名',
    runningTime: '运行时长',
    sorting: '排序',
    selectThread: '选择进程/线程',
    PTStatusSequenceChart: '进程/线程状态时序图',
    PTStatusDurationSummary: '进程/线程状态时长汇总',
    CPUCoreStatusSequenceChart: 'CPU核状态时序图',
    CPUCoreStatusDurationSummary: 'CPU核状态时长汇总',
    locatingPTStatus: '进程/线程状态定位',
    lockThread: '点击色块锁定进程/线程',
    selectedThread: '已选进程/线程',
    selecThread: '筛选进程/线程',
    lockedThread: '锁定进程/线程',
  },
  process: {
    tabName: '进程分析任务',
    sum: {
      pid: '进程ID/线程ID',
      command: '当前任务对应的命令名称',
      cpu: {
        usr: '任务在用户空间占用CPU的百分比',
        sys: '任务在内核空间占用CPU的百分比',
        wait: '任务在IO等待占用CPU的百分比',
        cpu: '任务占用CPU的百分比',

      },
      mem: {
        min: '每秒次缺页错误次数，即虚拟内存地址映射成物理内存地址产生的缺页次数，不需要从硬盘中加载页',
        maj: '每秒主缺页错误次数，当虚拟内存地址映射成物理内存地址时，相应的页在交换内存中，这样的缺页为主缺页（Major Page Faults），一般在内存使用紧张时产生，需要从硬盘中加载页',
        vsz: '任务使用的虚拟内存大小（KB）',
        rss: '常驻内存集（Resident Set Size），表示该任务使用的物理内存大小（KB）',
        mem: '任务占用内存的百分比',

      },
      disk: {
        wr: '任务每秒从硬盘读取的数据量（KB）',
        rd: '任务每秒向硬盘写入的数据量（KB）',
        iodelay: 'I/O 的延迟（单位是时钟周期），包括等待同步块 I/O 和换入块 I/O 结束的时间',
      },
      context: {
        cswch: '每秒主动任务上下文切换次数，通常指任务无法获取所需资源，导致的上下文切换。例如I/O、内存等系统资源不足时，就会发生主动任务上下文切换',
        nvcswch: '每秒被动任务上下文切换次数，通常任务由于时间片已到、被高优先级进程抢占等原因，被系统强制调度，进而发生的上下文切换。例如大量进程都在争抢CPU时，就容易发生被动任务上下文切换',
      },
      syscall: {
        syscall_title: '系统调用',
        time: '显示系统CPU时间花在哪里的百分比',
        seconds: '总的系统CPU时间（s）',
        usecs: '每次调用的平均系统CPU时间（ms）',
        calls: '整个采集过程内的系统调用次数',
        errors: '整个采集过程内的系统调用失败次数',
        syscall: '系统调用的名字',

      }
    },
    context: '上下文切换',
    selct_title: '进程/线程性能分析',
    analysisName: '进程/线程性能分析',
    create_title: '新建进程/线程性能分析任务',
    edit_title: '修改进程/线程性能分析任务',
    label: {
      pid: '指定进程ID',
      trace: '跟踪系统调用',
      thread: '采集线程信息'
    },
    cpu: 'CPU',
    mem: '内存',
    pid: 'PID',
    tread: '采集线程信息',
    trace: '跟踪系统调用',
    trace_tip: '对于某些系统调用频繁的应用程序，开启跟踪系统调用会导致系统性能大幅度下降，不建议在生产环境上使用',
    disable: '关闭',
    enable: '开启',
    selectPid: '选择进程ID',
    intervalTip: '采样间隔应当小于或等于采样时长的1/2',
    intervalTip1: '采样间隔应当小于或等于采样时长的1/2且最大为10s',
    selectTid: '筛选线程',
    obtainingTheCmdline: '加载中',
    noCmdline: '未获取到此进程ID的cmdline信息',
  },
  mission_modal: {
    selectTemplate: '选择模板',
    importTemplates: '导入模板',
    saveTemplates: '保存为模板',
    templateName: '模板名称',
    inputTemplateName: '请输入模板名称',
    confirm: '确定',
    cancle: '取消',
    startNow: '立即执行',
    cProgramAnalysis: '热点函数分析',
    javaMixedModeAnalysis: 'Java Mixed-Mode分析',
    processAnalysis: '进程/线程性能分析',
    sysPowerAllAnalysis: '系统性能全景分析',
    sysConfigAnalysis: '系统配置全景分析',
    resourceAnalysis: '系统资源调度分析',
    syslockAnalysis: '锁与等待分析',
    memAccessAnalysis: '访存分析',
    templateValid: '模板名称只能由字母、数字、“.”、“_”组成，长度为6~16个字符，且必须以英文字母开头',
    tipMessage: '最多可输入16个英文字符',
    successKeepTemplate: '模板保存成功',
    missionTemplate: '任务模板',
    missionName: '模板名称',
    delete: '删除',
    batchDelete: '批量删除',
    notice: '删除模板',
    noticeOne: '请确认是否删除',
    noticeTwo: '确认删除以下模板？',
    confirmDeleteTemp: '删除后模板不可恢复，请谨慎操作',
    cProcess: {
      taskname: '任务名称',
      analysis_type: '分析类型',
      application: '应用',
      app_params: '应用参数',
      app_path: '应用路径',
      duration: '采样时长（s）',
      pid: 'PID',
      cpu_interval: '采样间隔（ms）',
      file_path: '二进制/符号文件路径',
      source_path: 'C/C++ 源文件路径',
    },
    javaMix: {
      taskname: '任务名称',
      analysis_type: '分析类型',
      application: '应用',
      app_params: '应用参数',
      cpu_interval: '采样间隔（ms）',
      pid: 'PID/TID',
      duration: '采样时长（s）',
      java_path: 'Java源文件路径',
    },
    process: {
      taskname: '任务名称',
      analysis_type: '分析类型',
      duration: '采样时长（s）',
      interval: '采样间隔（s）',
      task_params: '采样类型',
      pid: '指定进程ID',
      thread: '采集线程信息',
      straceAnalysis: '跟踪系统调用'
    },
    sysConfig: {
      taskname: '任务名称',
      analysis_type: '分析类型',
      task_params: '采样类型',
    },
    panoramic: {
      taskname: '任务名称',
      analysis_type: '分析类型',
      task_params: '采样类型',
      duration: '采样时长（s）',
      interval: '采样间隔（s）'
    },
    sysSource: {
      taskname: '任务名称',
      analysis_type: '分析类型',
      application: '应用',
      app_params: '应用参数',
      file_path: '二进制/符号文件路径',
      source_path: 'C/C++ 源文件路径',
      duration: '采样时长（s）',
      pid: 'PID'

    },
    syslock: {
      taskname: '任务名称',
      analysis_type: '分析类型',
      application: '应用',
      app_params: '应用参数',
      cpu_interval: '采样间隔（ms）',
      pid: 'PID',
      duration: '采样时长（s）',
      function: '函数',
    },
    memAccess: {
      taskname: '任务名称',
      interval: '采样间隔（ms）',
      duration: '采样时长（s）',
      task_params: '采样类型'
    },
    lockSummary: {
      lock_and_wait_info: '锁与等待信息',
      task_name: '任务名称',
      module_name: '模块名称',
      function_name: '函数名称',
      call_times: '调用次数',
      call_site: '调用点',
      source_code_name: '源码文件名称',
      row_num: '行号',
      lockWait: '锁与等待',
      call_site_info: '调用点信息',
      timing: '时间戳',
      call_site_module_nama: '模块名称',
      call_site_function_nama: '函数名称',
      call_site_source_code_name: '源码文件名称',
      call_site_row_num: '行号',
      advancced_search: '高级搜索',
      select_task: '任务选择',
      task_time: '任务时间（s）',
      filname: '符号文件路径',
      source_path: 'C/C++ 源文件路径',
      common_term_task_crate_c_bs_tip: '（可选）符号文件在服务器上的绝对路径',
      common_term_task_crate_c_source_tip: '（可选）输入C/C++源文件在服务器上的绝对路径',
      point_no_data: '无数据时请点击任务/模块/函数/名称查看对应调用点信息',
      urlTips: '查询的任务过多，请求失败，请减少要查询的任务数量',
    },
    hpc: {
      mission_create: {
        bandwidth: '内存带宽',
        instr_dis: '指令分布',
        analysis_type: '采样类型',
        collectionType: '采集类型',
        MPIDirectory: 'MPI命令所在目录',
        selectNode: '选择运行mpirun的节点',
        configRankNum: '配置rank数量',
        rankNodes: '配置节点运行rank数量',
        rankNum: 'rank数量',
        summary: '总览',
        openMpParams: 'OpenMP参数',
        openMpParams_validate: 'OpenMP参数格式错误',
        openMpParams_tip: '设置OpenMP环境变量，变量间以空格隔开。如：OMP_NUM_THREADS=32 OMP_PROC_BIND=88',
        mpi_parameters_tips: '设置MPI环境变量-x的参数。\
        示例：“foo”表示从当前环境导出环境变量 foo； "foo=bar" 表示导出环境变量 foo 并将其值设置为启动进程中的 bar。',
        mpi_env_dir: 'MPI命令所在目录',
        mpi_env_dir_tip: '请输入MPI命令所在目录',
        mpiParams: 'MPI参数',
        rank: 'Rank',
        rankNums: 'Rank数量',
        nodeRange: '节点范围',
        allNodes: '全部节点',
        specifiedNode: '指定节点'
      },
      rank: 'Rank',
      summary: '总览',
      basicData: '基础数据',
      hpcTarget: 'HPC指标',
      mpi: 'MPI',
      openMp: "OpenMP",
      mpi_env_dir: 'MPI命令所在目录',
      interval: '采样间隔 (ms)',
      duration: '采样时长 (s)',
      help: '',
      label: '采样类型',
      all: '总览',
      memory: '内存带宽',
      orders: '指令分布',
      top_down: 'HPC Top-Down',
      ram: {
        memoryBandwidth: '内存带宽',
        aver: '平均DRAM带宽',
        read: '读带宽',
        write: '写带宽',
        insideSocket: 'Socket内的带宽',
        crossSocket: '跨Socket带宽',
        ratio: 'L3 By-Pass 比率',
        miss_ratio: 'L3 miss 比率',
        use_ratio: 'L3 使用 比率'
      },
      instruction: {
        instructionDistribution: '指令分布',
        memory: 'Memory',
        load: 'Load',
        store: 'Store',
        integer: 'Integer',
        float: 'Floating Point',
        advanced: 'Advanced SIMD',
        crypto: 'Crypto',
        branches: 'Branches',
        immediate: 'Immediate',
        indirect: 'Indirect',
        return: 'Return',
        barries: 'Barriers',
        instruct: 'Instruction Synchronization',
        dataSyn: 'Data Synchronization',
        datamem: 'Data Memory',
        notr: 'Not Retired',
        other: 'Other',
        tips: {
          memory: '内存load/Store执行指令的百分比',
          load: '内存读取Load执行指令的百分比',
          store: '内存写入Store执行指令的百分比',
          integer: '整型数据处理执行指令的百分比',
          float: '浮点数据处理执行指令的百分比',
          branches: '分支执行指令百分比',
          advanced: '高级SIMD数据处理执行指令的百分比',
          crypto: '加密指令的百分比',
          immediate: ' 中间分支执行指令的百分比',
          indirect: '间接分支执行指令的百分比',
          return: '返回执行指令的百分比',
          barriser: '屏障执行指令的百分比',
          instructions: '指令同步屏障执行指令的百分比',
          data: '数据内存同步屏障执行指令的百分比',
          data_mem: '数据内存屏障执行指令的百分比',
          not: '预取执行有效指令的百分比'
        }
      },
      basic: {
        run_time: '运行时间',
        serial_time: '串行时间',
        parallel_time: '并行时间',
        unbalance_time: '不平衡时间',
        exe_time: '执行时间',
        cpi: 'CPI',
        use_rate: 'CPU使用率',
        openMp_rate: 'OpenMP Team 使用率',
        bandwith: '平均DRAM带宽',
        reade_bandwith: '读带宽',
        write_bandwith: '写带宽',
      },
      hpc_target: {
        memory_width: '内存带宽',
        read_bandwith: '读带宽',
        ava_bandwith: '平均DRAM带宽',
        write_bandwith: '写带宽',
        out_socket_bandwith: '跨Socket的带宽',
        inner_socket_bandwith: 'Socket内的带宽',
        l3_rate: 'L3 By-Pass 比率',
        l3_missing: 'L3 miss比率',
        l3_use: 'L3 使用  比率',
        directives: '指令分布',
        memory: 'Memory',
        load: 'Load',
        store: 'Store',
        branch: 'Branches',
        other: 'Other',
        hpc_top_down: 'HPC Top-Down',
        event_name: '事件名称',
        event_rate: '事件比例',
        pmu: '原始PMU事件计数',
        core_pmu: 'Core相关PMU事件',
        uncore_pmu: 'Uncore相关PMU事件',
        event: '事件',
        count: '计数',
        open_mp: 'Open MP运行时指标',
        exe_time: '执行时间（秒）',
        unbalance_time: '不平衡时间（s）',
        unbalance_rate: '不平衡比率（%）',
        serial_time: '串行时间',
        parallel_time: '并行时间',
        rank: 'rank'
      }
    }
  },
  lock: {
    selct_title: '锁与等待分析',
    analysisName: '锁与等待分析',
    create_title: '新建锁与等待分析任务',
    edit_title: '修改锁与等待分析任务',
    timing: '详细调用信息',
    tip: {
      select_function: '支持下拉选择预置的glibc锁和等待函数名',
      function: '需要进行分析的非标准的锁与等待函数名',
      function1: '锁与等待函数的调用点信息',
    },
    lock_input_place: '支持输入多个函数名，两个函数名之间用英文逗号“,”分隔',
    form: {
      functions_label: '标准函数',
      functions_analysis: '分析函数',
      custom_functions_label: '自定义锁与等待函数',
      custom_functions_validate: '锁与等待函数名称格式错误',
      custom: '自定义'
    },
    selectTask: '选择任务',
    selectedTask: '已选任务',
    selectTaskPlaceholder: '请输入任务名称',
    taskName: '任务名称',
  },
  micarch: {
    cycles: '时钟周期',
    instructions: '指令数',
    timing: '时序信息',
    colon: '：',
    details: '详细信息',
    advance_params: '高级参数',
    selct_title: '微架构分析',
    create_title: '新建微架构分析任务',
    edit_title: '修改微架构分析任务',
    summury_mode: 'Summary模式',
    detail_mode: 'Detail模式',
    summury_mode_tip: '只采集PMU计数信息，不采集调用栈信息，呈现Top-Down模型数据',
    detail_mode_tip: '同时采集PMU计数信息和调用栈信息，呈现详细的分析数据',
    analysis_tip: '为保证分析结果的准确,建议只选择一个分析指标',
    typeItem_all: '所有',
    typeItem_user: '用户态',
    typeItem_kernel: '内核态',
    simpling_delay: '延迟采样时长（s）',
    simpling_delay_tip: '用于指定时间后执行分析，可以忽略程序的启动流程分析或用于采集程序热身，消除环境检测等带来的采集延迟',
    badSpeculation_tip: '该指标能够反映出由于错误的指令预测操作导致的流水线资源浪费情况',
    frontEndBound_tip: '该指标代表了处理器处理机制的前置部分，在该部分，指令获取单元负责指令的获取并转化为微指令提供给后置部分的流水线执行。该指标能够反映出处理器前置部分没有被充分利用的比例情况',
    resourceBound_tip: 'Back-End是处理器处理机制的后置部分，它负责微指令的乱序分发和执行，并返回最终结果。\
    Resource Bound是Back-End的子类，该指标能够反映出由于缺乏资源把微指令分发给乱序执行调度器，\
    从而导致的流水线阻塞情况，当前华为鲲鹏916处理器不支持该分析指标',
    coreBound_tip: 'Back-End是处理器处理机制的后置部分，它负责微指令的乱序分发和执行，并返回最终结果。\
    Core Bound是Back-End Bound的子类，该指标能够反映出由于处理器执行单元资源不足导致性能瓶颈的比例情况',
    memoryBound_tip: 'Back-End是处理器处理机制的后置部分，它负责微指令的乱序分发和执行，并返回最终结果。\
    Memory Bound是Back-End Bound的子类，该指标能够反映出由于等待数据读/写导致的流水线阻塞',
    label: {
      simpling: '采样模式',
      type: 'CPU类型',
      analysis: '分析指标',
      typeItem: '采样范围',
    },
    eventName: '事件名称',
    eventValue: '事件值',
    percentage: '事件比例',
    suggestions: {
      title: '{0}事件所占总事件比例为{1}%',
      des: '异常描述：',
      possibleCause: '可能原因：',
      solution: '解决方案：',
    },
    timingTable: {
      tooltip: {
        clickColorDlock: '点击色块可查看对应指标的下一级数据',
        timestamp: '时间戳',
      }
    },
  },
  ddr: {
    accessAnalysisType: '访存分析类型',
    tabCatch: '缓存访问',
    tabDdr: 'DDR访问',
    selct_title: '访存分析',
    analysisName: '访存分析',
    create_title: '新建访存分析任务',
    miss_event: 'Miss事件',
    indicatorType: '指标类型',
    llcMiss: '内存请求在最后一级Cache中未命中次数的比率',
    tlbMiss: 'CPU在内存访问或取指过程中，在tlb中没有找到虚拟地址到物理地址映射次数的比率',
    remoteAccess: '跨CPU访问远程DRAM的次数',
    longLatencyLoad: '跨CPU访问远程DRAM，并且访问时延超过设定的最小时延次数的比率',
    analysisMode: '分析模式',
    memoryAccessStatistics: '访存统计',
    samplingInterval: '采样间隔',
    instructions: '指令数',
    leftParenthesis: '（',
    rightParenthesis: '）',
    minimumDelay: '最小延迟',
    advancedParameters: '高级参数',
    cpuToBeSamples: '待采样CPU核',
    cpuToBeSamples_validate: 'CPU核编号格式错误',
    samplingRange: '采样范围',
    missEventStatistics: 'Miss事件统计',
    timeSequence: '时序视图',
    typeName: '名称',
    details: '详细视图',
    misses: 'Miss次数',
    edit_title: '修改访存分析任务',
    collectionDelay: '延迟采样时长',
    douhao: '、',
    label: {
      interval: '采样间隔（ms）',
      duration: '采样时长（s）',
      type: '采样类型',
      info: '最长采样时长为300s'
    },
    types: {
      ddr_access: 'DDR访问',
      cache_access: '缓存访问'
    },
    catchTypeSelectTitle: '类型',
    catchPageTitle1: 'L1C/L2C/TLB访问带宽和命中率',
    catchPageTitle2: 'L3C访问带宽和命中率',
    ddrIdselectTitle: 'DDR通道ID',
    DDRpageTitle1: 'DDR访问带宽',
    DDRpageTitle2: 'DDR访问次数',
    noSupportPrefix: '当前系统不支持{0}',
    chart: {
      bandwith: '带宽（MiB/s）',
      hitrate: '命中率',
      hitbandwith: '命中带宽（MiB/s）',
      acessscount: '访存总次数',
      localaccess: '本地访问DDR次数',
      spandie: '跨DIE访问DDR次数',
      spanchip: '跨片访问DDR次数',
      totaldie: '访问DDR次数'
    },
    select: {
      L1D: '访问 L1D',
      L1I: '访问 L1I',
      L2D: '访问 L2D',
      L2I: '访问 L2I',
      L2_TLB: '访问 L2 TLB',
      L2D_TLB: '访问 L2D TLB',
      L2I_TLB: '访问 L2I TLB',

      L3C_RD_IN: '读 DIE 内 L3C',
      L3C_WR_IN: '写 DIE 内 L3C',
      L3C_RD_OUT: '跨 DIE 读 L3C',
      L3C_WR_OUT: '跨 DIE 写 L3C',

      L3C_RD: '读 L3C',
      L3C_WR: '写 L3C',

      DDR_RD: '读 DDR',
      DDR_WR: '写 DDR'
    }
  },
  storageIO: {
    trace_title: 'Block I/O trace统计信息',
    callstack: '采集调用栈',
    statistical: '统计周期（s）',
    apis_title: 'I/O APIs',
    disk_title: '磁盘I/O',
    iodistribution: 'I/O数据块分布图',
    notdisplay: '不再自动弹出',
    tips: '点击拖选任意时间段，查看时间段内详细信息',
    apis_tips: '查看调用函数所属进程信息，以及在所选时间段内的返回值，执行时间等信息',
    diskio_tips: '查看磁盘IO的操作次数、IOPS、数据大小、吞吐率、时延和队列深度信息',
    times: '次数（%）',
    stage: '阶段',
    summury: {
      read: '读',
      write: '写',
      data_size: '数据大小分布（KB）',
      io_delay: 'I/O时延分布（us）',
      d2c_io_delay: 'D2C I/O时延分布',
      i2d_io_delay: 'I2D I/O时延分布',
      viewDetails: '查看详细信息',
      roprateTime: '读操作次数',
      woprateTime: '写操作次数',
      riops: '读IOPS',
      wiops: '写IOPS',
      rdataSize: '读数据大小（MiB）',
      wdataSize: '写数据大小（MiB）',
      rrate: '读吞吐率（MiB/s）',
      wrate: '写吞吐率（MiB/s）',
      rdelay: 'D2C读时延（ms）',
      wdelay: 'D2C写时延（ms）',
      i2drdelay: 'I2D读时延（ms）',
      i2dwdelay: 'I2D写时延（ms）',
      statistics: '各阶段时延统计',
      q2c_delay: 'Q2C时延信息',
      delay_percent: '时延占比（%）',
      data_volumn: '数据量（KB）',
      rq_count: '请求次数',
      avg_delay: '平均时延（s）',
      max_delay: '最大时延（s）',
      min_delay: '最小时延（s）',
      rq_delay: '请求时延统计',
      kb_delay: '数据时延统计',
      rw_static: '读写操作类型',
      r_static: '读操作类型',
      w_static: '写操作类型',
      io_operate: 'IO操作类型',
      trace_static: '时延占比',
      d2c_rdelay: 'D2C读时延（ms）',
      d2c_wdelay: 'D2C写时延（ms）',
      i2d_rdelay: 'I2D读时延（ms）',
      i2d_wdelay: 'I2D写时延（ms）',
    },
    ioapis: {
      siftPid: '筛选进程/函数',
      Invoking_times: '调用次数',
      average_time: '平均执行时间',
      total_time: '总执行时间',
      average_time_s: '平均执行时间（ms）',
      total_time_s: '总执行时间（ms）',
      time_ratio: '执行时间占比（%）',
      time_title: '时间段',
      times: '（次）',
      time1: '次',
      kb: '（KB）',
      mb: '（MiB/s）',
      us: '（ms）',
      pid: '进程ID',
      cpid: '子进程ID/进程ID',
      pidName: '进程名称',
      functionName: '函数名',
      sysTimes: '调用次数',
      precent_time: '执行时间占比（%）',
      time: '时间',
      timel: '时间',
      params: '参数列表',
      return: '返回值',
      task_time: '执行时间（ms）',
    },
    diskio: {
      siftDEV: '筛选DEV',
      object: '对象',
      indicator: '指标',
      throughput: '吞吐率',
      throughput1: '吞吐率（MiB/s）',
      queueDepth: '队列深度',
      oprateTimes: '操作次数',
      dataSize: '数据大小',
      dataSize1: '数据大小（MiB）',
      delayTime: 'D2C时延',
      delayTimeI2d: 'I2D时延',
      delayTime1: 'D2C时延（ms）',
      delayTime1I2D: 'I2D时延（ms）',
      top_ior: 'TOP5 读操作次数',
      top_iow: 'TOP5 写操作次数',
      top_iopsr: 'TOP5 读IOPS',
      top_iopsw: 'TOP5 写IOPS',
      top_datar: 'TOP5 读数据大小',
      top_dataw: 'TOP5 写数据大小',
      top_thr: 'TOP5 读吞吐率',
      top_thw: 'TOP5 写吞吐率',
      top_delayr: 'TOP5 D2C读时延',
      top_delayw: 'TOP5 D2C写时延',
      top_delayr_i2d: 'TOP5 I2D读时延',
      top_delayw_i2d: 'TOP5 I2D写时延',
      top_delayr1: '读时延',
      top_delayw1: '写时延',
      top_datar1: '读数据大小',
      top_dataw1: '写数据大小',
      top_thr1: '读吞吐率',
      top_thw1: '写吞吐率',
      top_queue: 'TOP5 队列深度',
      ioperttion: 'I/O操作详情',
      operateType: '操作类型',
      events: '事件',
      blocks: '块数',
      startBlockNo: '起始块编号',
      endBlockNo: '结束块编号',
      details: '  详细信息',
      block_dis: '数据块分布',
      read_block: '读数据块分布',
      write_block: '写数据块分布',
      delay_dis: 'D2C时延分布',
      read_delay: 'D2C读时延分布',
      write_delay: 'D2C写时延分布',
      delay_dis_I2D: 'I2D时延分布',
      read_delay_I2D: 'I2D读时延分布',
      write_delay_I2D: 'I2D写时延分布',
      interval: '区间',
      times: '次数（%）',
    },
    mission_create: {
      mission_name: '任务名称',
      duration: '采样时长（s）',
      statistical: '统计周期（s）',
      collection_size: '采集文件大小（MiB）',
      stack: '采集调用栈',
      node_config: '配置指定节点参数',
      order: '预约定时启动',
      process_name: '进程名称',
      app_dir: '应用路径',
      app_params: '应用参数',
      collect_way: '采集方式',
      cellect_time: '采集时间',
      cellect_date: '采集日期',
    },
  },
  hpc: {
    mission_create: {
      bandwidth: '内存带宽',
      instr_dis: '指令分布',
      analysis_type: '采样类型',
      collectionType: '采集类型',
      MPIDirectory: 'MPI命令所在目录',
      selectNode: '选择运行mpirun的节点',
      configRankNum: '配置rank数量',
      rankNodes: '配置节点运行rank数量',
      runNodes: '运行mpirun的节点',
      rankNum: 'rank数量',
      summary: '总览',
      openMpParams: 'OpenMP参数',
      openMpParams_validate: 'OpenMP参数格式错误',
      openMpParams_tip: '设置OpenMP环境变量，变量间以空格隔开。如：OMP_NUM_THREADS=32 OMP_PROC_BIND=88',
      mpi_parameters_tips: '设置MPI环境变量-x的参数。\
        示例：“foo”表示从当前环境导出环境变量 foo； "foo=bar" 表示导出环境变量 foo 并将其值设置为启动进程中的 bar。',
      mpi_env_dir: 'MPI命令所在目录',
      mpi_env_dir_tip: '请输入MPI命令所在目录',
      mpiParams: 'MPI参数',
      rank: 'Rank',
      rankNums: 'Rank数量',
      nodeRange: '节点范围',
      allNodes: '全部节点',
      specifiedNode: '指定节点'
    },
    basic_data: '基础数据',
    target: 'HPC指标',
    summary: '总览',
    basic: {
      exe_time: '执行时间',
      run_time: '运行时间',
      serial_time: '串行时间',
      parallel_time: '并行时间',
      unbalance_time: '不平衡时间',
      cpi: 'CPI',
      use_rate: 'CPU使用率',
      openMp_rate: 'OpenMP Team 使用率',
      bandwith: '平均DRAM带宽',
      reade_bandwith: '读带宽',
      write_bandwith: '写带宽',
    },
    hpc_target: {
      memory_width: '内存带宽',
      read_bandwith: '读带宽',
      ava_bandwith: '平均DRAM带宽',
      write_bandwith: '写带宽',
      out_socket_bandwith: '跨Socket的带宽',
      inner_socket_bandwith: 'Socket内的带宽',
      l3_rate: 'L3 By-Pass 比率',
      l3_missing: 'L3 miss比率',
      l3_use: 'L3 使用  比率',
      directives: '指令分布',
      memory: 'Memory',
      load: 'Load',
      store: 'Store',
      integer: 'Integer',
      float: 'Floating Point',
      advanced: 'Advanced SIMD',
      crypto: 'Crypto',
      branch: 'Branches',
      immediate: 'Immediate',
      indirect: 'Indirect',
      return: 'Return',
      barries: 'Barriers',
      instruct: 'Instruction Synchronization',
      dataSyn: 'Data Synchronization',
      datamem: 'Data Memory',
      notr: 'Not Retired',
      other: 'Other',
      hpc_top_down: 'HPC Top-Down',
      event_name: '事件名称',
      event_rate: '事件比例',
      pmu: '原始PMU事件计数',
      core_pmu: 'Core相关PMU事件',
      uncore_pmu: 'Uncore相关PMU事件',
      event: '事件',
      count: '计数',
      rank: 'rank',
      open_mp: 'OpenMP运行时指标',
      exe_time: '执行时间（s）',
      unbalance_time: '不平衡时间（s）',
      unbalance_rate: '不平衡比率（%）',
      serial_time: '串行时间',
      parallel_time: '并行时间',
    },
    tips: {
      memory: '内存Load/Store执行指令的百分比',
      load: '内存读取Load执行指令的百分比',
      store: '内存写入Store执行指令的百分比',
      integer: '整型数据处理执行指令的百分比',
      float: '浮点数据处理执行指令的百分比',
      branches: '分支执行指令百分比',
      advanced: '高级SIMD数据处理执行指令的百分比',
      crypto: '加密指令的百分比',
      immediate: ' 中间分支执行指令的百分比',
      indirect: '间接分支执行指令的百分比',
      return: '返回执行指令的百分比',
      barriser: '屏障执行指令的百分比',
      instructions: '指令同步屏障执行指令的百分比',
      data: '数据内存同步屏障执行指令的百分比',
      data_mem: '数据内存屏障执行指令的百分比',
      not: '预取执行有效指令的百分比'
    },
    mpi_com: {
      mpiTitle: 'MPI运行时指标'
    }
  },
  log_config: {
    config_key: '配置项',
    value: '值',
    time: '操作日志老化时间（天）',
    log_tip: '操作日志老化时间取值范围30天~180天',
  },

  importAndExportTask: {  // 导入导出任务
    ensureExport: { // 导出确认
      title: '导出确认',
      tip: '导出内容不涉及用户隐私和关键资产，详情查看用户指南导出内容说明，确认继续导出？',
      tipALink: '用户指南',
      Diagnose_tip: '导出的数据只包含采集系统诊断的数据和分析结果，确认继续导出？',
      confirmText: '继续导出',
    },
    ensureImport: { // 导入确认
      title: '导入确认',
      tip: '请确保导入正确的数据包，确认继续导入？',
      confirmText: '继续导入',
    },
  },

  // 工程相关
  project: {
    newPro: '创建工程',
    modifyPro: '修改工程',
    project: '工程',
    task: '任务',
    importedProject: '该工程为导入工程',
    importTask: '导入任务',
    exportTask: '导出任务',
    exportSucceeded: '导出成功',
    packingSucceeded: '打包成功',
    downloadTask: '下载任务',
    unzipData: '解压数据',
    totalFileSize: '文件总大小',
    retry: '重试',
    importAndExportTask: '导入/导出任务',
    details: '状态详情',
    endTime: '结束时间',
    toBeExported: '待导出',
    exportTaskStartFailed: '导出任务启动失败',
    exporting: '导出数据',
    exportFailed: '导出数据失败',
    exportDataSucceeded: '导出数据成功',
    packageTask: '打包任务',
    packaging: '打包数据',
    packagingFailed: '打包数据失败',
    uploading: '上传中',
    uploadFailed: '上传失败',
    uploaded: '上传成功',
    decompressing: '解压中',
    decompressionFailed: '解压失败',
    decompressed: '解压成功',
    verificationFailed: '导入校验失败',
    toBeImported: '待导入',
    importTaskStartFailed: '导入任务启动失败',
    importing: '导入数据',
    importFailed: '导入数据失败',
    importingTaskInfo: '导入任务信息',
    importTaskFailed: '导入任务信息失败',
    imported: '导入成功',
    viewTask: '查看任务',
    taskList: '任务列表',
    closeImportOrExportTaskTip: '任务窗口已关闭，您可在设置中的“导入/导出任务”中查看详情',
    createExportTaskTip: '仅支持导出当前用户所创建的工程及任务',
    selectProject: '选择工程',
    selectProjectPlaceholder: '请选择工程',
    selectTask: '选择任务',
    selectTaskPlaceholder: '请选择任务',
    downloadExportTaskTip: '导入数据分析时请确保压缩文件完整',
    createImportTaskProjectPlaceholder: '未输入则使用导入的工程名称',
    createImportTaskTaskPlaceholder: '未输入则使用导入的任务名称',
    importMode: '导入模式',
    uploadFile: '上传文件',
    specifyFilePath: '指定文件路径',
    fileStoragePath: '文件存放路径',
    fileStoragePathPlaceholder: '请输入文件在服务器上的完整路径',
    browse: '选择文件',
    viewDeletedTaskTip: '该任务已被删除，是否重新解压数据生成任务？',
    deleteTaskTip: '删除后，导入/导出任务相关的历史数据都会被删除，确认是否删除该记录？',
    deleteTaskTipTitle: '删除导入/导出任务',
    projectInformation: '工程信息',
    scenario: '场景选择',
    component: '组件',
    selectAComponent: '请选择组件',
    applicationScenario: '应用场景',
    applicationScenarioPlaceholder: '请选择应用场景',
    storageType: '存储类型',
    selectStorageType: '点击选择类型',
    bigDataInfo: '采集分析服务器上通用的CPU、内存、存储IO、网络IO等资源，以及大数据的典型配置、Top数据',
    distributedStorageInfo: '采集分析服务器上通用的CPU、内存、存储IO、网络IO等资源，以及分布式存储的典型配置、Top数据',
    generalScenarioInfo: '采集分析服务器上的CPU、内存、存储IO、网络IO等资源，以及Top数据',
    HPCInfo: '采集系统的PMU事件并结合OpenMP和MPI应用的关键指标，多维度数据关联呈现',
    HPCSelectNodeTxt: 'HPC场景下{0}最多支持10个节点',
    HPCSelectNodeTip: 'HPC场景支持101个节点同时进行采样分析',
    databaseInfo: '采集分析服务器上通用的CPU、内存、存储IO、网络IO等资源，以及数据库的典型配置、Top数据',
    databaseType: '数据库类型',
    databasePlaceholder: '请选择数据库类型'
  },

  // 节点相关
  node: {
    nodeList: '节点列表',
    selectNode: '选择节点',
    status: '状态',
    online: '在线',
    offline: '离线',
    abnormal: '部分节点异常',
  },

  // 节点管理
  nodeManagement: {
    nodeManagement: '节点管理',
    addNode: '添加节点',
    addNodeDialogTitle: '添加节点',
    nodeName: '节点名称',
    nodeNamePlaceholder: '默认为节点IP',
    sshSettings: 'SSH登录信息',
    rootPwdTip: '使用非root用户登录时，需要切换到root用户执行具体操作',
    rootPwd: 'root口令',
    rootPwdPlaceholder: '请输入root口令',
    pwdPlaceholder: '请输入用户口令',
    information: '提示',
    sshConfirmText: '请确认节点{0}下的指纹',
    sshUseRootConfirmText: '您正在使用root用户登录节点进行操作，请保证SSH通道安全。您也可以选择使用普通用户登录。同时请确认节点{0}下的指纹',
    hashType: '加密类型',
    keyType: '协议类型',
    fingerPrint: '指纹',
    continue: '继续',
    nodePort: '端口',
    installPath: '安装路径',
    adding: '添加中',
    deleting: '删除中',
    updating: '更新中',
    mismatch: '版本不匹配',
    deleted: '已删除',
    selectNodesInfo: '支持10个节点同时进行采样分析',
    goToNodeManagement: '管理节点',
    validation: {
      nodeName: '节点名称只能由字母、数字、特殊字符（@#$%^&*()[]<>._-!~+空格）组成，长度为1~32个字符',
      username: '用户名长度为1~32个字符',
    },

    nodeIp: 'IP地址',
    authenticationMode: '认证方式',
    passwordAuth: '口令认证',
    password: '口令',
    private_key_auth: '密钥认证',
    keyFile: '私钥文件',
    passphrase: '密码短语',
    passphrasePlaceholder: '请输入私钥文件的密码短语',
    ssh_Transmission: 'SSH传输须知',

    modifyNode: '修改节点信息',

    deleteNode: '删除节点',
    deleteNodeTip: '删除节点{0}后分析任务将不再分析此节点，但仍可查看此节点的历史分析报告',

    deleteNodeFailed: '删除节点失败',
    deleteNodeFailedTip: '该节点被以下工程占用，请修改工程后再执行该操作',
    viewLog: '查看安装日志',
    installationLog: '{0}节点安装日志',
    copyAll: '复制全部',
    copySucceeded: '复制成功',
    copyFailed: '复制失败',
    runDirectory: '运行目录',
    runDirectoryTip: '工具运行过程中所需文件（包括执行程序、配置文件、数据文件等）的存放目录',
    logDirectory: '日志目录',
    logDirectoryTip: '运行过程中生成日志的存放目录',
    batchImport: '批量导入',
    batchDelete: '批量删除',
    uploadMsg: '拖拽节点信息文件至此处，或',
    clickUpload: '点击上传',
    uploadTip: '请按照',
    templateTable: '模板表格',
    enterNodeMsg: '填写节点信息，工具最多支持101个节点',
    retry: '重试',
    replaces: '替换',
    fileParseOk: '文件解析成功',
    flieVerifying: '文件校验中...',
    fileRead: '文件读取',
    fileTypeError: '文件类型错误,只支持xlsx',
    fileSizeError: '文件大小超过1M',
    fileVerifyOk: '文件校验成功',
    fileReading: '文件读取中...',
    fileReadOk: '文件读取成功',
    fileReadError: '文件读取错误',
    nodeNotRequire: '以下节点信息不符合要求，请检查修改文件后重新导入。',
    pwOrPkNotPequireImport: '以下节点参数验证不通过或已经添加，请确认及修改后重新导入。',
    pwOrPkNotPequireDelete: '以下节点参数验证不通过或节点不存在，请确认及修改后重新导入。',
    confirmFp: '请确认以下节点的指纹。为保证SSH通道的安全，你也可以选择使用普通用户登陆。',
    enterKeyword: '请输入关键字',
    nodeIp1: '节点IP',
    encryptionType: '加密类型',
    protocolType: '协议类型',
    fingerprints: '指纹',
    projectName: '工程名称',
    attributionTool: '归属工具',
    nodeInformation: '节点信息',
    nodeId: '节点ID',
    No: '序号',
    userName: '用户名',
    pwOfRoot: 'root用户密码',
    deleteNodesTip: '您即将删除的节点中存在被以下工程正在使用的节点，单击“继续”，系统将取消以下工程使用该节点。仅使用该节点的工程将被移除，是否继续？',
    batchImportNodes: '批量导入节点',
    batchDeleteNodes: '批量删除节点',
    deleteBatchSuccess: '数据删除成功，请删除本地节点信息文件或妥善保管',
    deleteNodeProjectSuccess: '删除节点关联工程成功',
    importBatchSuccess: '数据上传成功，请删除本地节点信息文件或妥善保管', 
    uploadEmptyData: '不能上传空文件',
    maxNodeNum: '节点数量超过工具最多承载节点数(101个)',
    ipRepeat: '节点IP有重复',
    cancelImport: '取消导入',
    cancelDelet: '取消删除',
    cancelImportWarn: '确认取消当前批量导入节点?点击确认后，将终止导入，请谨慎操作',
    cancelDeletWarn: '确认取消当前批量删除节点?点击确认后，将终止删除，请谨慎操作',
    pwAuthTip: '当认证方式为口令认证时，口令必填',
    notRootPwTip: '当用户名不是root时，root口令必填',
    keyAuthTip: '当认证方式为秘钥认证时，私钥文件路径必填',
    flieVerify: '文件校验',
    hasChineseTip: '输入参数不能为中文',
    fileParseing: '文件解析中...',
    fileParseError: '文件解析失败',
  },

  ddr_summury: {
    sys_info: '系统信息',
    linux_os: 'Linux内核版本',
    cpu_type: 'CPU类型',
    percent: '百分比',
    average: '平均值',
    showAverage: '查看平均值',
    averageTarget: '分析对象',
    tabCacheTitle: '缓存访问详细数据',
    tabDdrTitle: 'DDR访问详细数据',
    filterTarget: '筛选CPU',
    poupTitle: '对象',
    cpu: 'CPU',
    landWidth: '带宽(MiB/s)',
    landWidthTitle: '带宽',
    getPerce: '命中率',
    metricTitle: '指标',
    cache_access: '缓存访问',
    ddr_access: 'DDR访问',
    tlb: 'L1C/L2C/TLB访问带宽和命中率',
    l3c: 'L3C访问带宽和命中率',
    type: '类型',
    brandwidth: '带宽（MiB/s）',
    hitrate: '命中率',
    acc_hitBrandWidth: '访问命中带宽（MiB/s）',
    acc_brandWidth: '访问带宽（MiB/s）',
    acc_hit_rate: '访问命中率',
    ddr_acc_brandwidth: 'DDR访问带宽',
    ddr_id: 'DDR通道ID',
    ddr_acc: 'DDR访问次数',
    total_acc: '访存总次数/s',
    local_acc: '本地访问DDR次数/s',
    inter_die: '跨DIE访问DDR次数/s',
    chip_die: '跨片访问DDR次数/s',
    total_die: '访问DDR次数/s',
    maxBandWidthtip1: '1. 全读内存，实际最大带宽大概等于理论最大带宽*90%',
    maxBandWidthtip2: '2. 全写内存，实际最大带宽大概等于理论最大带宽*70%',
    maxBandWidthtip3: '3. 读写混合（按读写各50%），实际最大带宽大概等于理论最大带宽*50%',
    maxBandWidthtip4: '4. 实际内存带宽使用达到理论最大带宽的60%后，系统性能会急剧下降',
    hitRate: '命中率',
    maxBandWidth: '理论最大带宽（MiB/s）',
    maxBandWidthRate: '比值（%）',
    maxBandWidthRateTipTitle: '当前带宽与理论最大带宽比值（%）',
  },
  aboutMsg: {
    about: '关于',
    name: '鲲鹏性能分析工具',
    version: '版本 ',
    time: '发布时间：',
    copyRight: '版权所有 © 华为技术有限公司  year 保留一切权利'
  },
  preSwitch: {
    switchLabel: '预约定时启动',
    serverTime: '预约任务启动时间为服务器时间，当前服务器日期和时间',
    serverTimeWarn: '请参考当前服务器的日期和时间指定预约任务的日期和时间',
    onceColect: '单次采集',
    duraColect: '周期采集',
    colectMethods: '采集方式',
    pointTime: '采集时间',
    pointDuration: '采集日期',
    onceTime: '采集日期和时间',
    onceTimeWarn: '指定采集时间和实际开始采集时间间隔不大于10s',
    errorMsgTime: '时间不能为空',
    errorMsgTime1: '日期包含当天时，时间不能早于当前服务器时间',
    errorMsg: '指定日期不能为空',
    errorMsg1: '日期范围无效，开始日期为当前日期的7天内，结束日期为开始日期的30天内',
    errorMsgDate: '时间日期不能为空'
  },
  preTable: {
    perMission: '预约任务',
    preTableTitle: '预约配置',
    tableTitle: '预约采集任务',
    name: '任务名称',
    type: '任务类型',
    status: '任务状态',
    done: '完成',
    diliver: '下发中',
    scheduled: '预约',
    time: '采集时间',
    duration: '采集日期',
    analysis: '分析类型',
    createTime: '创建时间',
    action: '操作',
    total: '总条数',
    reserve: '预约',
    running: '下发中',
    success: '完成',
    fail: '失败'
  },
  nodeConfig: {
    title: '配置节点参数',
    allConfig: '批量配置',
    nickName: '别名',
    node: '节点IP',
    processId: '进程ID',
    status: '配置状态',
    action: '操作',
    configed: '已配置',
    noConfig: '未配置',
    couldConfig: '可配置',
    configParams: '配置参数',
    nodeTip: '如无需单独配置各节点参数，全部节点都将以当前配置参数执行',
    inputTip: '请输入当前节点指定进程ID',
    pointed: '指定'
  },
  certificate: {
    name: '证书名称',
    validTime: '证书到期时间',
    status: '状态',
    certStatusName: '证书状态',
    close: '关闭',
    valid: '有效',
    nearFailure: '即将过期',
    failure: '已过期',
    nodeIp: '节点IP',
    nodeNickname: '节点别名',
    agentTitle: 'Agent服务证书',
    agentNotice: 'Agent服务证书，即系统性能分析的服务端和Agent端之间通讯的证书',
    notice: '通知',
    warnNotice: '您的Agent服务证书即将过期或已过期',
    agentWarnNotice: '以下Agent服务证书即将过期或已过期，请及时更换证书',
    webWarnNotice1: '您的web服务端证书已过期，请更换证书',
    webWarnNotice2: '您的web服务端证书即将过期，过期日期为${time}，请提前更换证书',
    operation: '操作',
    keyFileText: '输入不能为空',
    keyPlaceHoder: '请输入私钥文件的密码短语',
    createSuccess: '证书生成成功',
    createUpdate: '证书替换成功',
    workUpdate: '工作密钥更换成功',
    certStatus1: '即将过期',
    certStatus2: '已过期',
    country_Verification_Tips: '国家代号只能包含字母，长度为2个字符',
    common_city_province_Verification_Tips: '输入内容不符合格式要求，只能包含字母、数字、“_”、“-”、“.”和空格，最大长度为128个字符',
    common_Verification_Tips: '输入内容不符合格式要求，只能包含字母、数字、“_”、“-”、“.”和空格，最大长度为64个字符',
  },
  agentCertificate: {
    nodeId: '节点',
    verificationLable: '认证方式',
    password: '口令',
    opt: '安装路径',
    keyFile: '私钥文件',
    pwdPhrase: '密码短语',
    passwordAuth: '口令认证',
    private_key_auth: '密钥认证',
    update_certificate: '更换证书',
    update_work_key: '更换工作密钥',
    agentWarnNotice1: '您的agent服务端证书已过期，请更换证书',
    agentWarnNotice2: '您的agent服务端证书即将过期，过期日期为${time}，请提前更换证书',
  },
  operationLog: {
    downLoadLog: '下载日志',
    downLoadLogTip: '操作日志仅保存近30天的记录，最多显示2000条',
    adminDownLoadLogTip: '操作日志仅保存近30天的记录，最多显示100000条',
    workingLog: '运行日志',
    commonLog: '公共日志',
    sysLog: '系统性能分析日志',
    logLevel: '日志级别:',
    logFileName: '日志文件名称',
    operation: '操作',
    size: '大小',
    download: '下载',
    downloadAll: '下载',
    close: '关闭',
    confirmModify: '确定要修改当前日志级别？',
    sureDownload: '请确认是否下载以下运行日志？',
    managerName: '管理员名称:',
    password: '密码:',
    confirm: '确定',
    cancle: '取消',
    userManageLog: '用户管理运行日志',
    webServerLog: 'Web_Server运行日志',
    analysisLog: '数据分析运行日志',
    collectionLog: '数据采集运行日志',
    downloadAllCollectionLog: '下载数据采集运行日志',
  },
  mission_create: {
    nodeParamsConfig: '配置指定节点参数',
    modeAppHolder: '请输入应用所在的绝对路径',
    modePidHolder: '请输入进程ID',
    modeAppParamsHolder: '请输入应用参数',
    missionNameNotice: '请输入任务名称',
    missionNameWarn: '任务名称不能为空',
    modeAppPath: '应用路径不能为空',
    modeAppWarn: '路径格式错误，每层路径必须以“/”开头，以具体文件名结尾，文件名不能包含^`/|;&$><\!等特殊字符',
    modeAppPathSaftWarn: '注意：请确保应用无安全风险',
    modeAppPathInvalid: '当前只支持输入${path}下的应用，配置应用路径请联系管理员',
    modeAppPathInvalid2: 'Java混合分析模式下，应用路径必须以 /java 结尾',
    modeAppParams: '应用参数不能为空',
    modePidNotice: '进程ID不能为空',
    modePidWarn: '只能输入自然数',
    templateNoData: '当前无可用模板，请先配置参数并保存模板',
    analysisTarget: '分析对象',
    mode: '模式',
    bindMode: '绑定模式',
    launchApp: 'Launch Application',
    attachPid: 'Attach to Process',
    universal_title: '通用分析',
    system_title: '系统部件分析',
    dedicated_title: '专项分析',
    sysPro: '全景分析',
    sysConfig: '配置全景分析',
    resSchedule: '资源调度分析',
    structure: '微架构分析',
    mem: '访存统计分析',
    process: '进程/线程性能分析',
    missEvent: 'Miss事件分析',
    falsesharing: '伪共享分析',
    cPlusPlus: '热点函数分析',
    lock: '锁与等待分析',
    java: 'Java混合模式分析',
    io: 'I/O分析',
    hpc_analysis: 'HPC分析',
    hpc: 'HPC分析',
    checkPreInfo: '查看配置信息',
    paramsConfigNotice: '存在未配置的必填项',
    restartSuccess: '重启成功',
    modeAppNotice: '待分析应用所在绝对路径，如“/opt/mysql/mysqld”',
    modeAppParamsNotice: '执行应用需要配置的参数，如“--defaults-file=/opt/mysql/my.cnf”，请根据实际应用场景填写',
    modeAppRunUser: '运行应用的操作系统用户信息',
    disableDataTip: '数据库场景不能预约定时启动',
    disableeTip: '开启应用运行用户时，任务无法预约定时启动，只能立即执行',
    sysProMsg: '通过采集系统软硬件配置信息，以及系统CPU、内存、存储IO、网络IO资源的运行情况，识别系统瓶颈并提供优化建议',
    sysProMsgScenes: '采集系统的CPU、内存、存储IO、网络IO等资源的运行情况，获得对应的使用率、饱和度，错误、大数据典型配置，Top数据等指标，以识别系统性能瓶颈',
    sysConfigMsg: '采集系统的软硬件配置信息，分析配置是否合理',
    resScheduleMsg: '基于CPU调度事件分析系统资源调度情况',
    structureMsg: '基于PMU事件获取指令在CPU流水线上的运行情况，快速定位当前应用在CPU上的性能瓶颈',
    memMsg: '基于CPU访问缓存和内存的PMU事件，分析存储的访问次数、命中率、带宽等情况',
    memAccessAnalysisMsg: '基于CPU访问缓存和内存的PMU事件，获取访问次数、命中率、带宽等指标',
    processMsg: '采集进程/线程对CPU、内存、存储IO等资源的消耗情况，识别性能瓶颈并提供优化建议。支持分析单个进程的系统调用情况',
    missEventMsg: '基于ARM SPE的能力对业务进行LLC Miss，TLB Miss，Remote Access，Long Latency Load等Miss类事件分析',
    falsesharingMsg: '基于ARM SPE的能力分析得到发生伪共享的次数、比例、指令地址和NUMA节点等信息',
    cPlusPlusMsg: '支持分析C/C++程序代码识别性能瓶颈，给出对应的热点函数以及源码和汇编指令的关联详情。通过冷/热火焰图展示函数的调用关系，发现优化路径',
    lockMsg: '基于采样数据分析锁与等待函数的使用情况，关联到详细的进程和调用点，并给出优化建议',
    javaMsg: '分析Java程序代码，获得性能瓶颈点，给出对应的热点函数',
    ioMsg: '以存储块设备为分析对象，分析得出块设备的I/O操作次数、I/O数据大小、I/O队列深度、I/O操作时延等性能数据，并关联到具体I/O操作信息',
    hpcMsg: '通过采集系统的PMU事件，获取面向OpenMP和MPI应用的关键指标，以及内存带宽、指令分布、微架构指标等信息',
    app_path_input_tip: '当前只支持路径为${path}下的应用，请联系管理员配置应用路径',
    crossFieldValidation: { // 跨字段交叉校验
      samplingDelayAndSamplingTime: '延迟采样时长与采样时长总和应不超过900s',
    },
    kcore: '内核函数关联汇编代码',
    collectCallStack: '采集调用栈',
    collection_size: '采集文件大小（MiB）',
    process_name: '进程名',
    process_alias: '进程名称',
    target_process: '目标进程',
    process_name_placeholder_mem: '请输入精确的进程名称，若关联到多个进程将使任务失败',
    process_pid_placeholder_mem: '请输入进程ID，仅支持关联一个PID',
    process_input_placeholder: '支持正则输入',
    process_input_placeholder_java: '支持正则输入，输入的进程仅能包含1个PID',
    pid_input_placeholder: '支持输入至多128个PID，请用“,”分隔',
    pid_input_placeholder_java: '支持输入1个PID',
    pid_valid_tip: 'PID格式有误, 只能输入数字',
    disablingReason: {
      tit: '在使用MPI模式采集前，请确认您的环境满足以下要求：',
      firstItem: '1.参与mpi的多个节点已配置ssh免密，如果未配置，请针对运行mpirun的用户<user>配置ssh免密',
      secondItem: '2.运行mpi程序的<user>已配置sudo权限，如果未配置请在root下执行以下命令: /usr/bin/malluma_tools/user_sudoers_enable.sh <user>'
    }
  },

  // falsesharing
  falsesharing: {
    filesize: '采集文件大小',
    filesizeTips: '通过设置采集文件大小，防止由于文件过大导致分析时间过长',
    address: '缓存行地址',
    records: '伪共享访问次数',
    rate: '伪共享访问占比',
    offset: '缓存行地址偏移量',
    codeAddress: '指令地址',
    symbol: '符号名',
    sharedObject: '目标文件名',
    source: '源文件：行号',
    numaNode: 'NUMA节点',
    suggestMsg: [
      '1) 对于使用频繁的变量应该分配独立的Cache Line，以此减少冲突使得程序运行速度更快，同时也让其它共享了该Cache Line的变量不受影响',
      '2) 跨越了多个Cache Line的热点Lock或Mutex，需要考虑Cache Line对齐',
      '3) 读多写少的变量，可以将这些变量组合到相同或相邻的Cache Line中',
      '4) 不在某一行Cache Line上竞争严重，却在很多Cache Line上竞争的代码段也需要优化',
      '5) 多进程程序访问共享内存时，同样需要关注Cache Line上的竞争',
    ],
    // 参数配置建议
    paramsConfigSuggestions: '伪共享分享采集数据量大，耗时较长，建议限定采集范围，如指定core、增大采样间隔、减小采样时长等',
  },
  tipMsg: {
    refreshP: '刷新工程',
    createP: '创建工程',
    modifyP: '修改工程',
    deleteP: '删除工程',
    createM: '创建任务',
    modifyM: '修改任务',
    deleteM: '删除任务',
    startM: '启动任务',
    stopM: '停止任务',
    restartM: '重启任务',
    associationM: '查看任务分析路径',
    associationNodeM: '查看分析路径',
    reanalyzeM: '再次分析',
    reanalyzeTask: '再次分析任务',
    reanalyzeServer: '再次分析节点',
    viewInfoLog: '查看任务基本信息和日志'
  },

  system_config: {
    common_config: '公共配置',
    system_tuning: '系统性能分析配置',
    diagnose_config: '系统诊断配置',
    tuning_assistant_config: '调优助手配置',
    user_count: '最大在线普通用户数',
    session_timeout: '会话超时时间（min）',
    web_deadline: 'Web服务证书过期告警阈值（天）',
    agent_deadline: 'Agent服务证书过期告警阈值（天）',
    operation_log_period: '操作日志保留期（天）',
    run_log_level: '运行日志级别',
    user_man_run_log_level: '用户管理运行日志级别',
    change_config: '修改',
    application_path: '应用程序路径配置',
    password_out_date: '密码有效期（天）',
  },

  // 建议列表
  optimizationSuggestions: {
    Cycles: {
      desc: '采集时间内总的CPU周期数'
    },
    Instructions: {
      desc: '采集时间内提交的总指令数'
    },
    IPC: {
      desc: 'CPU每个时钟周期内所提交的指令数'
    },
    Retiring: {
      desc: 'CPU每个指令发射口在每个时钟周期提交的指令数',
      cause: 'Retiring值低，可能是因为乘除法等耗时长的指令多',
      tips: 'Retiring值越高越好，可通过代码矢量化提升程序效率'
    },
    'Front End Bound': {
      desc: 'CPU前端指令供应不足',
      cause: '热点代码分布不集中，导致ITLB/ICache Miss等',
      tips: '查看Front-End Bound细分指标'
    },
    'Fetch Latency Bound': {
      desc: '取指时延高，CPU流水线停顿',
      cause: 'ITLB或ICache Miss； 投机执行失败导致流水线清空',
      tips: '1. 减少热点代码分支数 2.使用PGO优化程序编译'
    },
    'ITLB Miss': {
      desc: 'ITLB为CPU内高速缓存，用于保存最近使用的指令虚拟地址到物理地址的映射信息。ITLB Miss表示指令地址缓存未命中',
      cause: '热点代码分布不集中',
      tips: '优化代码结构或使用PGO优化程序编译'
    },
    'ICache Miss': {
      desc: 'ICache为CPU内的高速缓存，用于保存最近使用的指令。ICache Miss表示指令在高速缓存未命中, 需要从内存中读取',
      cause: '热点代码分布不集中',
      tips: '使用指令预取或PGO优化程序编译'
    },
    'Branch Mispredict Flush': {
      desc: '分支预测失败导致流水线清空',
      cause: '分支指令多且无法准确预测',
      tips: '1. 减少分支指令数 2.使用Likely和Unlikely提高预测准确性 3. 使用PGO优化程序编译'
    },
    'OOO Flush': {
      desc: '乱序执行失败导致流水线清空'
    },
    'SP Flush': {
      desc: '静态预测失败导致流水线清空'
    },
    'Fetch Bandwidth': {
      desc: '前端取指无法供应后端指令消耗',
      cause: '1. 分支指令占比太大 2.长期跨边界取指',
      tips: '1. 减少分支指令数，提高分支预测准确性'
    },
    'Bad Speculation': {
      desc: 'CPU乱序执行预测错误导致流水线停顿',
      cause: '分支预测失败等',
      tips: ' 1. 减少热点代码分支数；2. 使用PGO优化程序编译'
    },
    'Machine Clear': {
      desc: '清空CPU流水线导致的流水线停顿'
    },
    'Nuke Flush': {
      desc: '专指Load投机过程中读后写冲突导致的流水线清空'
    },
    'Other Flush': {
      desc: '除Nuke Flush以外的其他事件导致的CPU流水线清空，如系统调用、ISB、Exception等'
    },
    'Brand Mispredict': {
      desc: '分支预测失败导致流水线清空',
      cause: '分支指令多且无法准确预测',
      tips: '1. 减少分支指令数 2.使用Likely和Unlikely提高预测准确性 3. 使用PGO优化程序编译'
    },
    'Indirect Branch': {
      desc: '除RET以外的间接跳转指令（如br、blr汇编指令）预测错误占比',
    },
    'Immediate Branch': {
      desc: 'b、b.cond、bl等汇编指令发生直接跳转'
    },
    'Push Branch': {
      desc: '函数调用跳转指令（例如bl、blr汇编指令）预测错误占比'
    },
    'Pop Branch': {
      desc: '函数返回跳转指令（例如ret汇编指令）预测错误占比',
    },
    'Other Branch': {
      desc: '除Push、Pop以外的其他分支指令（例如b、b.cond、cbz、cbnz、tbz、tbnz汇编指令）预测错误占比'
    },
    'Back End Bound': {
      desc: 'CPU后端资源供应不足',
      cause: '数据读写时延高或计算单元不足',
      tips: '查看Back-End Bound细分指标',
    },
    'Core Bound': {
      desc: 'CPU计算单元不足',
      cause: '长期使用相同的计算单元',
      tips: '查看Core Bound细分指标'
    },
    Divider: {
      desc: '除法单元不足导致的流水线停顿',
      cause: '除法计算太多',
      tips: '1. 将2的幂次除法运算改为右移操作 2. 保存重复使用的中间计算结果 3.将常数除法运算改成乘以它的倒数'
    },
    'FSU Stall': {
      desc: '浮点单元不足导致的流水线停顿',
      cause: '浮点运算太多',
      tips: '浮点运算矢量化'
    },
    'Exe Port Stall': {
      desc: '除Divider和FSU以外，其他执行单元不足导致的流水线停顿'
    },
    'Memory Bound': {
      desc: '等待数据读/写导致的流水线停顿',
      cause: '访存局域性不好或缓存竞争严重',
      tips: '查看Memory Bound细分指标，进行访存分析'
    },
    'L1 Bound': {
      desc: '在L1命中情况下，CPU流水线的停顿',
      cause: 'DTLB未命中，导致流水线停顿',
      tips: '1. 使用64KB页表或大页 2. 提升访存局域性'
    },
    'L2 Bound': {
      desc: '在L2命中情况下，CPU流水线停顿',
      cause: '数据块过大、数据访问局域性不好或Cache冲突严重',
      tips: '1. 使用数据预取，尽量在L1命中 2.减小数据块大小，提升访存局域性 3.热点数据Cacheline对齐'
    },
    'Ext Mem Bound': {
      desc: '在L3或DDR命中情况下，CPU流水线停顿',
      cause: '数据块过大或数据访问局域性不好',
      tips: 'L3和DDR访存时延长：1. 使用数据预取，尽量在L1/L2命中 2.减小数据块大小，提升访存局域性'
    },
    'Store Bound': {
      desc: '写数据导致的流水线停顿',
      cause: '伪共享导致的Cacheline失效',
      tips: '进行伪共享分析'
    },
    'Resource Bound': {
      desc: 'CPU硬件资源不足，导致的CPU流水线停顿'
    }
  },
  optimization: '优化建议',
  optimization_no_msg: '优化建议库中未识别到需优化的指标，请您结合实际业务情况和相关数据具体分析',
  weakPassword: {
    pwd_rule: '弱口令必须包含大写字母、小写字母、数字以及特殊字符（`~!@#$%^&*()-_=+\\|[{}];:\'",<.>/?）中两种及以上类型的组合，长度为8~32个字符',
    addWeakPwd: '添加',
    addWeakPwdTitle: '添加弱口令',
    WeakPwd: '弱口令',
    searchWeakPwd: '请输入弱口令',
    deleWeakPwd: '删除弱口令',
    confirmdele: '请确认是否删除弱口令'
  },
  userGuide: {
    next: '下一步',
    done: '完成',
    liTitle: '新手引导',
    addProject: '创建工程',
    addProjectDes: '单击“创建工程”按钮，快速创建新的工程',
    selectNode: '选择节点',
    selectNodeDes: '选择您需要采样分析的节点',
    collapseBanner: '收起/展开Banner',
    collapseBannerDes: '点击∧可收起Banner以显示更多内容。收起后点∨击可展开Banner',
    createTask: '创建任务',
    createTaskDes: '单击“创建任务”按钮，快速创建新的任务',
    configParams: '设置参数',
    configParamsDes: '设置对应参数来满足您所需要分析的维度和精度',
    createTaskRemarks: '注：某些参数会影响采样数据量及分析时长，如采样时长、采样间隔等',
    taskName: '输入任务名称',
    taskNameDes: '为新建任务命名',
    selectAnaObj: '选择分析对象',
    selectAnaObjDes: '系统分析可采集整个服务器系统的数据，适用于多业务混合运行和有子进程的场景。应用分析可采集指定应用或进程的数据',
    selectAnaType: '选择分析类型',
    selectAnaTypeDes: '选择适用于当前业务的分析类型，图标下方的文字介绍将帮助您更好的理解所选类型的适用场景',
    viewAnaReport: '查看分析报告',
    viewAnaReportDes: 'analysisCircle：数据采集和分析中；<br/>\
    greenCircle：任务分析成功；<br/>\
    blueCircle：任务等待中；<br/>\
    redCircle：任务分析失败或任务停止。<br/>\
    待analysisCircle变成greenCircle后，可点击该节点查看对应的分析报告。',
    viewWizard: '查看新手引导',
    viewWizardDes: '您可在导航栏菜单中再次查看新手引导',
    inputProjectName: '填写工程名称',
    inputProjectNameDes: '在文本框中输入此工程的名称',
    selectProjectScene: '选择场景',
    selectProjectSceneDes: '根据您的业务特点，选择对应的分析场景',
    createProject: '下发命令',
    createProjectDes: '点击“确认”新建工程',
    inpuTaskName: '填写任务名称',
    inpuTaskNameDes: '在文本框中输入此任务的名称，任务分析报告会以此命名',
    selectAnalysisType: '选择分析对象、类型',
    selectAnalysisTypeDes: '根据您的业务特点，选择对应的分析对象与分析类型',
    createTaskSure: '下发命令',
    createTaskSureDes: '点击“确认”生成新的分析任务，同时启动该任务的数据采样及分析过程\
    <br/>点击“保存为模板”保存当前配置到模版，可用于后续创建同配置的新任务',
    taskRun: '数据采集分析',
    taskRunDes: '数据采集分析中，请耐心等待',
    analysModal: '授权确认',
    analysModalDes: '点击确认即同意采集分析任务所需的相关数据',
  },
  databaseConfig: {
    ip: '数据库连接IP',
    port: '端口',
    username: '用户名',
    password: '密码',
    btnTip: '请先填写各节点的数据库用户名和密码',
    placeholderIp: '请输入数据库连接IP',
    placeholderPort: '请输入数据库连接端口',
    placeholderUsername: '请输入数据库用户名',
    placeholderPassword: '请输入数据库密码',
  },
  linkage: {
    hz: '频率',
    cpuAverageLoad: 'CPU平均负载',
    disk: '存储IO',
    net: '网络IO',
    configData: '配置数据',
    perfData: '性能数据',
    diskList: '硬盘列表',
    raid_group: 'RAID组',
    stroug_volume: '存储卷数量',
    netNum: '网卡数量',
    netMsg: '网卡详细信息',
    netportMsg: '网口详细信息',
    paramsSame: '节点参数一致',
    paramsNotSame: '节点参数不一致',
    typicalConfig: '典型配置',
    allConfig: '所有配置',
    selectObj: '筛选对比对象',
    startTime: '任务开始时间',
    endTime: '任务结束时间',
    task: '所属任务',
    project: '所属工程',
    version: '版本号',
    fileNum: '文件系统数量',
    cpuAvg: '参与数据平均CPU核',
    cpuUsage: 'CPU平均利用率',
    memUsage: '内存使用情况',
    tips: '若当前参与对比分析的结果中混杂了“物理机”的结果和“虚拟机”的结果，请您注意选择符合预期的对比对象',
    parameters: '参数',
    smooth: '平滑算法',
    cpuPercent5: 'CPU核利用率>5%',
    cpuPercent10: 'CPU核利用率>10%',
    taskListTitle: '分析报告管理',
    taskName: '任务名称',
    selectScene: '选择场景',
    choseObject: '选择对比对象',
    placeHolder: '请输入任务名称',
    linkagedObject: '全景分析',
    hotspotAnalysis: '热点函数分析',
    generalScenario: '通用',
    bigData: '大数据',
    dataBase: '数据库',
    hpc: 'HPC',
    distributedStorage: '分布式存储',
    prompt: '提示',
    notSameScene: '对比节点间组件不一致。工具无法对比典型配置，是否确认创建任务？',
    horizontal: '横向分析',
    hvertical: '纵向分析',
    taskCreateTime: '任务创建时间',
    allParams: '全部参数',
    differentParams: '不一致参数',
    name: '名称',
    horizontal_analysis_tip: '同一工程同一任务下的多个节点间分析结果对比',
    horizontal_analysis_tip2: '同一工程同一任务下的两个节点间分析结果对比',
    vertical_analysis_tip: '不同任务两个节点间分析结果对比',
    compare_type: '对比类型：',
    typeData: '典型数据',
    onCPUdiff: '热差分火焰图',
    offCPUdiff: '冷差分火焰图'
  },
  diffflamegraph: {
    node_name: '节点名称',
    node_ip: '节点IP',
    task_name: '任务名称',
    project_name: '工程名称',
    sample_interval: '采样间隔（ms）',
    period: '时间周期',
    instruction_number: '指令数',
    ipc: 'Ipc',
    os: '操作系统',
    host_name: '主机名',
    search_mark: '搜索标记',
    gen_diff: '绘制差分火焰图',
    tips: '选择两个节点进行火焰图对比分析，请确保两个对比节点报告的采样间隔一致，否则可能产生偏差',
    baseChoose: '请选择base',
    selectChoose: '请选择比较',
    searchKey: '搜索函数',
    diff_tips: '此页面为差分火焰图，红色代表对比的函数运行时间加长，越红时间越长，蓝色代表函数运行时间变短，越蓝时间越短，紫色代表搜索框搜索到的函数'
  },
  typicalConfigTips: {
    sched_autogroup: '关闭内核桌面交互优化，在高并发场景，桌面交互优化会降低主机性能',
    net_interrupt: '根据网卡所属cpu进行中断绑定可以优化系统网络性能',
    wake_up_to_grab: '唤醒抢占会导致进程被频繁睡眠/唤醒,关闭唤醒抢占，减少进程被频繁睡眠/唤醒导致的性能问题',
    tcp_max_syn_backlog: '所能接受SYN同步包的最大客户端数量',
    'net.core.somaxconn': '服务端所能accept即处理数据的最大客户端数量，即完成连接上限',
    'net.core.rmem_max': '接收套接字缓冲区大小的最大值',
    'net.core.wmem_max': '发送套接字缓冲区大小的最大值（以字节为单位）',
    'net.ipv4.tcp_rmem': '配置读缓冲的大小，三个值，第一个是这个读缓冲的最小值，第三个是最大值，中间的是默认值',
    'net.ipv4.tcp_wmem': '配置写缓冲的大小，三个值，第一个是这个写缓冲的最小值，第三个是最大值，中间的是默认值',
    'net.ipv4.max_tw_buckets': '表示系统同时保持TIME_WAIT套接字的最大数量',
    IO_schedule: '配置IO调度，deadline或者noop更适用于MySQL数据库场景。命令中的${device}为磁盘名称，根据实际磁盘名称进行修改。NVMe盘不支持此操作',
    disk_throughput: '提升磁盘吞吐量，可以调整到更大',
    swappiness: '值越大，越积极使用swap分区，值越小，越积极使用内存',
    dirty_ratio: '内存里的脏数据百分比不能超过这个值',
    innodb_thread_concurrency: 'InnoDB使用操作系统线程来处理用户的事务请求',
    innodb_read_io_threads: '执行请求队列中的读请求操作的线程数',
    innodb_write_io_threads: '执行请求队列中的写请求操作的线程数',
    innodb_buffer_pool_instances: '开启多个内存缓冲池，把需要缓冲的数据hash到不同的缓冲池中，这样可以并行的内存读写',
    innodb_open_files: '在innodb_file_per_table模式下，限制Innodb能打开的文件数量',
    innodb_buffer_pool_size: '缓存数据和索引的地方',
    innodb_log_buffer_size: '缓存重做日志',
    innodb_io_capacity: 'innodb 后台线程每秒最大iops上限',
    innodb_log_files_in_group: '重做日志组的个数',
    innodb_log_file_size: '重做日志文件大小',
    innodb_flush_method: `Log和数据刷新磁盘的方法：
      \n1. datasync模式：写数据时，write这一步并不需要真正写到磁盘才算完成（可能写入到操作系统buffer中就会返回完成），\
      真正完成是flush操作，buffer交给操作系统去flush,并且文件的元数据信息也都需要更新到磁盘
      \n2. O_DSYNC模式：写日志操作是在write这步完成，而数据文件的写入是在flush这步通过fsync完成
      \n3. O_DIRECT模式：数据文件的写入操作是直接从mysql innodb buffer到磁盘的，并不用通过操作系统的缓冲，而真正的完成也是在flush这步,日志还是要经过OS缓冲`,
    innodb_spin_wait_delay: '控制轮询的间隔',
    innodb_sync_spin_loops: '控制轮询的循环次数',
    innodb_spin_wait_pause_multiplier: '控制轮询间隔随机数',
    innodb_lru_scan_depth: 'LRU列表的可用页数量',
    innodb_page_cleaners: '刷新脏数据的线程数',
    innodb_purge_threads: '回收undo的线程数',
    table_open_cache_instances: 'MySQL 缓存 table 句柄的分区的个数',
    table_open_cache: 'Mysqld打开表的数量',
    network_queue: '针对泰山单核能力不足，核数又较多的情况，产品需要在服务器端，客户端均使用网卡多中断队列（默认16队列）的规格，网卡至少为千兆网卡，客户端与服务端光纤互连',
    'tcp-segmentation-offload': '在openGauss数据库CPU占比90%以上的情况下，CPU成为瓶颈，需要开启offloading，将网络分片offloading到网卡上',
    'large-receive-offload': '在openGauss数据库CPU占比91%以上的情况下，CPU成为瓶颈，需要开启offloading，将网络分片offloading到网卡上',
    'generic-segmentation-offload': '在openGauss数据库CPU占比92%以上的情况下，CPU成为瓶颈，需要开启offloading，将网络分片offloading到网卡上',
    'generic-receive-offload': '在openGauss数据库CPU占比93%以上的情况下，CPU成为瓶颈，需要开启offloading，将网络分片offloading到网卡上',
    'net.ipv4.tcp_timestamps': '表示开启TCP连接中TIME-WAIT sockets的快速回收，默认为0，表示关闭，1表示打开',
    'net.ipv4.tcp_mem': `第一个数字表示，当tcp使用的page少于 94500000 时，kernel不对其进行任何的干预。\n
      第二个数字表示，当tcp使用的page超过 915000000 时，kernel会进入“memory pressure”压力模式。\n第三个数字表示，当tcp使用的pages超过 927000000 时，\
      就会报：Out of socket memory`,
    'net.ipv4.tcp_max_orphans': '最大孤儿套接字（orphan sockets）数',
    'net.ipv4.tcp_fin_timeout': '表示系統默认的TIMEOUT时间',
    'net.ipv4.ip_local_port_range': 'TCP和UDP能够使用的port段',
    MTU: 'ifconfig命令可以查看与设置将网络设置成合适的值',
    tx_queue: 'ifconfig命令可以查看与设置将网络设置成合适的值',
    rx_queue: 'ifconfig命令可以查看与设置将网络设置成合适的值',
    huge_page: '查看/boot/grub/menu.lst文件透明大页是否打开',
    max_process_memory: `逻辑内存管理参数为max_process_memory，主要功能是控制数据库节点上可用内存的最大峰值，该参数的数值设置公式参考max_process_memory。\n
    执行作业最终可用的内存为：\nmax_process_memory – shared memory ( 包括shared_buffers ) – cstore_buffers\n
    所以影响执行作业可用内存参数的主要两个参数为shared_buffers及cstore_buffers。\n
    逻辑内存管理有专门的视图查询数据库节点中各大块内存区域已使用内存及峰值信息。
    可连接到单个数据库节点，通过“pg_total_memory_detail”查询该节点上内存区域信息；或者连接到数据库主节点，通过“pgxc_total_memory_detail”查询节点上内存区域信息`,
    work_mem: `参数work_mem依据查询特点和并发来确定，一旦work_mem限定的物理内存不够，算子运算数据将写入临时表空间，带来5-10倍的性能下降，查询响应时间从秒级下降到分钟级。\n
    \n对于串行无并发的复杂查询场景，平均每个查询有5-10关联操作，建议work_mem=50%内存/10。\n对于串行无并发的简单查询场景，平均每个查询有2-5个关联操作，建议work_mem=50%内存/5。\n
    对于并发场景，建议work_mem=串行下的work_mem/物理并发数。\n执行算子是否下盘的参数\n参数work_mem可以判断执行作业可下盘算子是否已使用内存量触发下盘点。当前可下盘算子有六类（向量化及非向量化共10种）：
    Hash(VecHashJoin)，Agg(VecAgg)，Sort(VecSort)，Material(VecMaterial)，SetOp(VecSetOp)，WindowAgg(VecWindowAgg)。\
    该参数设置通常是一个权衡，即要保证并发的吞吐量，
    又要保证单查询作业的性能，故需要根据实际执行情况（结合Explain Performance输出）进行调优`,
    enable_nestloop: '采用资源池局部并发控制机制的目的是控制在数据库主节点上同一资源池内的并发作业数量。\
    局部并发控制机制根据执行作业的cost，控制复杂查询的并发作业数量。\n参数parctl_min_cost数值用于判断执行作业是否是复杂作业',
    enable_bitmapscan: `控制查询优化器对位图扫描规划类型的使用。设置为“on”，表示使用；设置为“off”，表示不使用。\
    \n说明：\n如果只需要在当前数据库连接（即当前Session）中临时更改该参数值，则只需要在SQL语句中执行命令如下命令：\n
    SET enable_bitmapscan to off;\nbitmapscan扫描方式适用于“where a > 1 and b > 1”且a列和b列都有索引这种查询条件，但有时其性能不如indexscan。
    因此，现场调优如发现查询性能较差且计划中有bitmapscan算子，可以关闭bitmapscan，看性能是否有提升`,
    enable_hashagg: '控制优化器对Hash聚集规划类型的使用',
    enable_hashjoin: '控制优化器对Hash连接规划类型的使用',
    enable_mergejoin: '控制优化器对融合连接规划类型的使用',
    enable_indexscan: '控制优化器对索引扫描规划类型的使用',
    enable_indexonlyscan: '控制优化器对仅索引扫描规划类型的使用',
    enable_seqscan: '控制优化器对顺序扫描规划类型的使用。完全消除顺序扫描是不可能的，但是关闭这个变量会让优化器在存在其他方法的时候优先选择其他方法',
    enable_sort: '控制优化器使用的排序步骤。该设置不可能完全消除明确的排序，但是关闭这个变量可以让优化器在存在其他方法的时候优先选择其他方法',
    rewrite_rule: '控制优化器是否启用LAZY_AGG和MAGIC_SET重写规则',
    sql_beta_feature:
      '控制优化器是否启用。SEL_SEMI_POISSON/SEL_EXPR_INSTR/PARAM_PATH_GEN/RAND_COST_OPT/PARAM_PATH_OPT/PAGE_EST_OPT测试功能',
  },
  net_io: {
    connect_fail_reasons: [
      {
        title: '物理层故障',
        reasons: [
          {
            description: '线路问题',
            suggestions: [
              '排查网口物理连线是否正确，包括：本端网口位置、\
              对接的服务器或交换机端口等。如果不正确，则修复',
            ],
          },
          {
            description: '本端或对端网口故障',
            suggestions: [
              '排查本端网口状态是否是RUNING。如果不是，则修复',
              '排查对端网口状态是否是RUNING。如果不是，则修复',
            ],
          },
        ],
      },
      {
        title: '链路层问题',
        reasons: [
          {
            description: '本端没有对端的ARP信息',
            suggestions: [
              '如果对端IP与本端在一个局域网内，排查本端是否有对端的ARP信息。\
              如果没有，则手动配置ARP或触发动态发现ARP',
              '如果对端IP与本端不在一个局域网内，排查本端是否有对应路由器的ARP信息。\
              如果没有，则手动配置ARP或触发动态发现ARP',
            ],
          },
        ],
      },
      {
        title: 'IP层故障',
        reasons: [
          {
            description: '本端或对端IP配置问题',
            suggestions: [
              '排查本端IP配置是否正确。如果不正确，则正确配置IP',
              '排查对端IP配置是否正确。如果不正确，则正确配置IP',
            ],
          },
          {
            description: '本端或对端路由配置问题',
            suggestions: [
              '排查本端路由配置是否正确，或者直接用 ip r get x.x.x.x，让系统查找是否存在可达路由，\
              接口是否符合预期。如果不正确，则正确配置路由',
              '排查对端路由配置是否正确，或者直接用 ip r get x.x.x.x，让系统查找是否存在可达路由，\
              接口是否符合预期。如果不正确，则正确配置路由',
            ],
          },
          {
            description: '本端或对端策略路由配置问题',
            suggestions: [
              '排查路由表中否存在同一网段对应不同网口的路由的情况，如果存在，\
              在排查是否存在正确的策略路由。如果没有，则正确配置策略路由',
            ],
          },
          {
            description: 'IP冲突问题',
            suggestions: [
              'IP冲突更容易发生在局域网内。在本端或对端通过arping命令测试对方IP，\
              排查是否存在其他MAC地址的应答。如果存在，需要找到该服务器并调整IP配置',
            ],
          },
          {
            description: '协议栈问题',
            suggestions: [
              '拨测回环地址，排查是否正常。如果不正常，则为协议栈问题，需要排查内核协议栈',
            ],
          },
          {
            description: '防火墙问题',
            suggestions: [
              '排查两端服务器是否配置了限制对端报文的防火墙规则，\
              如果有，则调整防火墙配置',
            ],
          },
          {
            description: 'MTU限制',
            suggestions: [
              '针对禁止拆包的报文，排查两端服务器及互联网络的MTU配置是否满足要求，\
              如果不满足，则调整MTU大小',
            ],
          },
          {
            description: '交换机或路由器问题',
            suggestions: [
              '排查整个互联网络，检查交换机或路由器的IP、路由、防火墙、\
              MTU配置是否正确。如果不正确，则调整配置',
            ],
          },
        ],
      },
    ],
    tcp_dail_fail_reasons: [
      {
        title: '端口问题',
        reasons: [
          {
            description: '服务端端口被占用',
            suggestions: [
              '请排查服务端端口是否已经被占用。如果是，则更换TCP拨测端口',
            ],
          },
          {
            description: '客户端端口被占用',
            suggestions: [
              '请排查客户端端口是否已经被占用。如果是，则更换TCP拨测端口',
            ],
          },
        ],
      },
      {
        title: 'TIME_WAIT问题',
        reasons: [
          {
            description:
              '排查服务端是否存在大量处于TIME_WAIT状态的socket连接，\
              数量达到net.ipv4.tcp_max_tw_buckets',
            suggestions: ['调大tcp_max_tw_buckets或设置tw_reuse/tw_recycle'],
          },
        ],
      },
      {
        title: '半连接（syn）队列问题',
        reasons: [
          {
            description:
              '排查服务端是否存在大量处于SYN_RECV状态的socket连接，\
              数量达到max(64,/proc/sys/net/ipv4/tcp_max_syn_backlog)',
            suggestions: ['调大tcp_max_syn_backlog'],
          },
        ],
      },
      {
        title: '全连接（accept）队列问题',
        reasons: [
          {
            description:
              '排查服务端是否存在大量处于ESTABLISHED状态的socket连接，\
              数量达到 min(backlog, net.core.somaxconn)，\
              其中backlog为应用程序建立监听时设置的',
            suggestions: ['调大somaxconn或修改程序'],
          },
        ],
      },
    ],
    udp_dail_fail_reasons: [
      {
        title: '端口问题',
        reasons: [
          {
            description: '服务端端口被占用',
            suggestions: [
              '请排查服务端端口是否已经被占用。如果是，则更换UDP拨测端口',
            ],
          },
          {
            description: '客户端端口被占用',
            suggestions: [
              '请排查客户端端口是否已经被占用。如果是，则更换UDP拨测端口',
            ],
          },
        ],
      },
      {
        title: 'TIME_WAIT问题',
        reasons: [
          {
            description:
              '排查服务端是否存在大量处于TIME_WAIT状态的socket连接，\
              数量达到net.ipv4.udp_max_tw_buckets',
            suggestions: ['调大udp_max_tw_buckets或设置tw_reuse/tw_recycle'],
          },
        ],
      },
      {
        title: '半连接（syn）队列问题',
        reasons: [
          {
            description:
              '排查服务端是否存在大量处于SYN_RECV状态的socket连接，\
              数量达到max(64,/proc/sys/net/ipv4/udp_max_syn_backlog)',
            suggestions: ['调大udp_max_syn_backlog'],
          },
        ],
      },
      {
        title: '全连接（accept）队列问题',
        reasons: [
          {
            description:
              '排查服务端是否存在大量处于ESTABLISHED状态的socket连接，\
              数量达到 min(backlog, net.core.somaxconn)，\
              其中backlog为应用程序建立监听时设置的',
            suggestions: ['调大somaxconn或修改程序'],
          },
        ],
      },
    ],
    cwnd: '窗口大小（{0}）',
    transferredData: '传输数据量（{0}）',
    connet_fail: '连通性拨测失败，请参照以下可能原因及建议排查',
    tcp_udp_fail: '{0}拨测失败，在主机连通性可达的情况下，请参照以下可能原因及建议排查',
    unknown: '未知',
    may_reason: '可能原因{0}：',
    better_suggestion: '优化建议{0}：',
    net_kpi: '网络KPI',
    index_grade: '指标评级',
    jit: '时延',
    packets_loss_rate_1: '丢包率',
    bandwidth_1: '带宽',
    theory_bandwidth: '理论带宽',
    average: '平均值（{0}）',
    dial_num: '拨测序号：',
    sent_packets: '发包数',
    received_packets: '收包数',
    packets_loss_rate: '丢包率（%）',
    max: '最大值',
    min: '最小值',
    arv: '平均值',
    mean_deviation: '标准偏差',
    rtt: '往返时延（ms）',
    protocol: '协议',
    unselect: '未筛选',
    port_num: '端口{0}',
    transfer_direction: '传输方向',
    receive: '收',
    send: '发',
    bothway: '双向',
    caught_eth: '抓包网口',
    filter_cond: '过滤条件',
    ip_addr: 'IP地址',
    nic_name: '网口名称',
    caught_time_text: '抓包时长',
    caught_time: '抓包时长（{0}）',
    file_size_text: '文件大小（MB）',
    file_size: ' 文件大小（{0}）',
    collect_time: '采样时长（{0}）',
    caught_num: '抓包包数',
    file_num: '文件数',
    collect_time_text: '采样时长',
    collect_time_text_1: '采样时长（s）',
    collect_core_stack: '采集内核丢包调用栈',
    simple_freq_text: '采样频率（ms）',
    simple_freq: '采样频率（{0}）',
    collect_file_size: '采集文件大小（{0}）',
    dialing_connection: '连通性拨测',
    dialing_tcp: 'TCP拨测',
    dialing_udp: 'UDP拨测',
    illustrate: 'TCP/UDP拨测任务会消耗大量网络带宽，且需要两个节点；TCP侧重带宽、数据重传；UDP侧重时延抖动。',
    load: '网络负载监控',
    connect_id: '连接ID',
    client_ip: '客户端IP',
    client_port: '客户端端口',
    server_ip: '服务端IP',
    server_port: '服务端端口',
    local_ip: '本端IP',
    local_port: '本端端口',
    remote_ip: '远端IP',
    remote_port: '远端端口',
    latency: 'RTT/时延',
    loss: '丢包率',
    jitter: '时延抖动',
    router_num: '路由序号',
    router_ip: '路由设备IP',
    response_time1: '响应时间1（ms）',
    response_time2: '响应时间2（ms）',
    response_time3: '响应时间3（ms）',
    connect_info: '连接信息',
    dialing_stat_info: '拨测统计信息',
    operation: '操作',
    checkin: '查看',
    bandwidth: '带宽（Mbits/sec）',
    retr: '重传',
    totaldatagrams: '数据包',
    jitter_ms: '延时抖动（ms）',
    loss_total: '丢失数据包/总数据包',
    loss_p: '丢包率（%）',
    kpi: '拨测KPI',
    conf_info: '配置信息',
    check_detail: '查看详情',
    dial_index: '拨测指标',
    route_conf_info: '路由配置信息',
    arp_info: 'ARP信息',
    excel: '优秀',
    good: '普通',
    bad: '较差',
    src_send: '源服务器（发）',
    server_end_get: '服务端服务器（收）',
    client_end_send: '客户端服务器（发）',
    route_info_tll: '路由信息（最大TTL次数：{0}）',
    dail_stat_val: '拨测统计值',
    cpu_load: 'CPU负载',
    memory_usage: '内存利用率',
    network_IO: '网络IO统计',
    details: '{0}详细信息',
    port_display_list: ['网络配置信息', '中断及XPS/RPS信息', '占用网络IO的进程'],
    io_statistics_tip: {
      iface_tip: '网络接口名称',
      rxpck: '每秒接收的数据包总数',
      txpck: '每秒发送的数据包总数',
      rxkbs: '每秒接收的字节总数',
      txkbs: '每秒发送的字节总数'
    },
    tip: {
      user_tip: '在用户态运行时所占用CPU总时间的百分比',
      nice_tip: '在用户态改变过优先级的进程运行时所占用CPU总时间的百分比',
      system_tip: '在内核态运行时所占用CPU总时间的百分比（不包括硬件中断和软件中断的时间）',
      iowait_tip: 'CPU等待磁盘I/O操作导致空闲状态的时间占CPU总时间的百分比',
      irq_tip: 'CPU服务硬件中断所花费时间占CPU总时间的百分比',
      soft_tip: 'CPU服务软件中断所花费时间占CPU总时间的百分比',
      idle_tip: 'CPU空闲且系统没有未完成的磁盘I/O请求的时间占总时间的百分比',
      runq_tip: '运行队列的长度，即等待运行任务的数量',
      plist_tip: '在任务列表中的任务的数量',
      idavg_1_tip: '最后1分钟的系统平均负载',
      idavg_5_tip: '最后5分钟的系统平均负载',
      idavg_15_tip: '最后15分钟的系统平均负载',
      blocked_tip: '当前阻塞的任务数，正在等待I/O完成'
    },
    network_config: {
      port_info: '网口信息',
      bind_info: '网络绑定信息',
      route_info: '路由信息',
      ARP_info: 'ARP信息',
      bind_name: '绑定名称',
    },
    xps_rps: {
      hard_info: {
        info: '硬中断信息',
        selected_list: ['硬中断编号视图', 'CPU核视图'],
        Interruption_title: '中断分布',
        network_Interruption_title: '网口中断分布',
        now_network: '只显示当前网口信息',
        number: '硬中断编号',
        hardware_info: '硬件中断信息',
        software_info: '软中断分布',
        rps_xps_info: 'RPS/XPS配置信息',
        device_info: '设备信息',
        PCIE_num: 'PCIE设备BDF号',
        inter_name: '中断事件名称',
        inter_time: '中断频率（次/s）',
        inter_time_text: '中断频率',
        inter_bind: '中断绑核信息',
        network_name: '网络接口名称',
        network_queue: '网络队列名称',
        num_hard_inter: '硬中断绑核数量',
        xps_hard_inter: 'XPS绑核数量',
        rps_hard_inter: 'RPS绑核数量',
        network_numa: '网口物理连接NUMA',
        ipi_name: '跨核IPI频率（次/s）',
        inter_select_placeholder: '请选择需要高亮的中断事件',
      },
      software_info: {
        info: '软中断信息',
        type: '中断类型'
      },
      inter_dis: {
        info: '中断分布统计',
        soft_hadr_time: '软硬中断频率（次/s）',
        checked_title: '显示核总中断分布'
      }
    }
  },
  storage_io_detail: {
    pressure_test_result: '压测结果',
    system_load: '系统负载',
    result_tab: {
      test_model_obj: '压测对象',
      test_model_label: '测试模型',
      indicator: '指标',
      read: '读',
      write: '写',
      time: '时间：',
      basic_indicator: '基础指标',
      latency_diagram: '时延时序数据',
      latency: '时延',
      iops_diagram: 'IOPS时序数据',
      iops: 'IOPS',
      throughput_diagram: '吞吐量时序数据',
      throughput: '吞吐量',
      latency_distribution: '时延分布',
      io_distribution: 'IO深度分布',
      process_perf: '压测进程性能',
      dev_perf: '存储设备性能',
      times: '次',
      block_size: '请求块大小（KB）',
      rw_type: '读写模式',
      rw_mix_read_ratio: '读写比例',
      io_depth: 'I/O队列深度',
      io_engine: 'I/O引擎',
      num_jobs: '并发度',
      direct: 'Direct I/O',
      size: 'I/O大小（GB）',
      run_time: '测试时长（s）',
      read_throughput: '读吞吐量：',
      write_throughput: '写吞吐量：',
      read_iops: '读IOPS：',
      write_iops: '写IOPS：',
      read_latency: '读时延：',
      write_latency: '写时延：',
      dev_name: '设备名称',
      latency_cope: '时延区间（ms）',
      percent: '比例（%）',
      io_depth_scope: 'IO深度范围',
      type: '类型',
      max_val: '最大值（ms）',
      min_val: '最小值（ms）',
      avg_val: '平均值（ms）',
      standard_val: '标准值（ms）',
      optimization: '优化建议',
      user_tip: '压测进程在用户态运行时所占用CPU总时间的百分比',
      sys_tip: '压测进程在内核态运行时所占用CPU总时间的百分比，该指标没有包含服务硬件和软件中断所花费的时间。',
      context_switches_tip: '压测进程切换次数',
      major_page_faults_tip: '压测进程主缺页次数，当虚拟内存地址映射成物理内存地址时，相应的页在交换内存中，这样的缺页为主缺页（Major Page Faults），\
        一般在内存使用紧张时产生，需要从硬盘中加载页。',
      minor_page_faults_tip: '压测进程次缺页次数，即虚拟内存地址映射成物理内存地址产生的缺页次数，不需要从硬盘中加载页。',
      time_spent_in_queue_tip: '在队列中耗费的时间',
      io_number_tip: '压测进程总共执行的IO次数',
      merge_number_tip: '压测进程总共发生的IO合并数',
      tick_number_tip: '磁盘繁忙的总滴答数',
      util_tip: '磁盘利用率',
    }
  },
  net_capture_loss: {
    loss: {
      sugg_title: '查看排查建议',
      sugg_title_1: '排查建议',
      detai_list: ['网卡硬件和驱动丢包', '协议栈缓冲队列丢包', '协议栈丢包', '内核调用栈丢包'],
      statistics_title: '统计信息（每秒平均值）',
      suggestion_list_1: [
        {
          title: '如果rxdrop/s过高，请参考以下排查建议（1）',
          reason: '可能原因1：Ring Buffer满，报文没有及时发送到协议栈处理',
          sugg_list: ['优化建议1：增大Ring Buffer大小', '优化建议2：增大网口队列数量，相应会增加Ring Buffer数量', '优化建议3：增大网口队列数据并绑核，提高硬中断和软中断处理速度']
        },
        {
          title: '如果rxfifo/s过高，请参考以下排查建议（2）',
          reason: '可能原因1：Ring Buffer满造成反压',
          sugg_list: ['优化建议：按照rxdrop/s的方法处理'],
          reason_1: '可能原因2：网口队列满，报文没有及时拷贝到Ring Buffer中',
          sugg_list_1: ['优化建议：增大网口队列数据并绑核，提高硬中断和软中断处理速度']
        },
        {
          title: '如果rxerr/s过高，请参考以下排查建议（7）',
          reason: '可能原因1：如果同时存在rxfifo/s和rxdrop/s',
          sugg_list: ['优化建议：按照rxfifo/s和rxdrop/s的方法处理'],
          reason_1: '可能原因2：网卡端口协商丢包',
          sugg_list_1: ['优化建议：排查网卡和上游网络设备协商的速率和模式是否符合预期，如果不符合则调整'],
          reason_2: '可能原因3：网卡流控丢包',
          sugg_list_2: ['优化建议：排查网卡是否开启了流控，并根据实际述求调整'],
          reason_3: '可能原因4：报文MAC地址错误丢包',
          sugg_list_3: ['优化建议：抓包排查报文MAC地址是否正确。如果不正确需要检查上游arp缓存是否正确'],
          reason_4: '可能原因5：网卡驱动和固件BUG丢包',
          sugg_list_4: ['优化建议：排查网卡驱动和固件版本BUG是否会造成丢包。如果存在则升级版本'],
          reason_5: '可能原因6：网口连接造成丢包',
          sugg_list_5: ['优化建议：排查网口连线是否接触不良。如果存在，则更换网线'],
          reason_6: '可能原因7：长报文丢包',
          sugg_list_6: ['优化建议：排查网口MTU配置，确认是否支持长报文。如果不支持，但通过抓包和业务确定是否存在长报文，如果存在，则调整配置']
        }
      ],
      suggestion_list_2: [
        {
          title: '如果协议栈缓冲队列丢包率过高，请参考以下排查建议（1）',
          reason: '可能原因1：协议栈处理不及时',
          sugg_list: ['优化建议1：配置RPS，支持多核同时处理报文', '优化建议2：配置GRO，减少协议栈操作次数']
        }
      ],
      suggestion_list_3: [
        {
          title: '如果UDP：receive buffer errors/send buffer errors，请参考以下排查建议（2）',
          reason: '可能原因1：网络处理能力差',
          sugg_list: ['优化建议1：提高网络处理能力，包括：中断绑核、启用RPS、配置网口（offload、中断聚合）等'],
          reason_1: '可能原因2：发送数据量太大',
          sugg_list_1: ['优化建议1：优化程序，包括：降低发包数据量、增大socket buffer size、异步', '优化建议2：调整系统参数（net.ipv4.udp_mem，net.ipv4.udp_rmem_min，net.ipv4.udp_wmem_min）']
        }
      ],
      io_packet: {
        title: '网络IO丢包统计',
        txerr: '发送数据包时，每秒发生错误的总数',
        coll: '每秒发生冲突的数据包数量',
        rxdrop: '发送数据包进入Ring Buffer后，每秒钟丢弃的数据包的数量',
        txdrop: '接收数据包进入Ring Buffer后，每秒钟丢弃的数据包的数量',
        txcarr: '每秒发送的载波错误数',
        rxfram: '接收数据包时，每秒发生的帧对齐错误数',
        rxfifo: '接收数据包时，每秒发生FIFO溢出错误的次数',
        txfifo: '发送数据包时，每秒发生FIFO溢出错误的次数'
      },
      stack_packet: {
        detail_list: ['IP协议统计数据', 'ICMP协议统计数据', 'TCP协议统计数据', 'UDP协议统计数据']
      },
      kernel_packet: {
        skb: 'skb次数',
        skb_num: 'SKB丢弃次数',
        skb_tip: '事件在不同函数中的发生次数',
        source_name: '源码文件名'
      }
    },
    capture: {
      mac_address_1: '源MAC地址',
      mac_address_2: '目标MAC地址',
      byte: '长度（byte）',
      ip_address_1: '源IP地址',
      port_1: '源端口',
      ip_address_2: '目标IP地址',
      port_2: '目标端口',
      header_info: '包头信息',
      download_report: '下载文件（.pcap）'
    }
  },
  diagnostic: {
    common_title: '内存诊断分析',
    analysis_type: '内存诊断分析',
    analysis_log: '系统诊断日志',
    taskParams: {
      taskname: '任务名称',
      analysisTarget: '分析对象',
      diagnosticTarget: '诊断对象',
      ram: '内存',
      networkIO: '网络IO',
      storageIO: '存储IO',
      Application: '应用',
      attachTip: '启动采集任务时应用正在运行,采样时长由配置参数控制，适用于应用运行时间较长的场景',
      app_dir: '应用路径',
      app_parameters: '应用参数',
      app_runUser: '应用运行用户',
      app_runUser_pwdPlaceholder: '请输入拉起应用的系统用户',
      app_user: '用户名',
      app_passWord: '密码',
      app_passWord_pwdPlaceholder: '请输入密码',
      memory_diagnose: '内存诊断分析',
      analysis_type: '分析类型',
      content_diagnose: '诊断内容',
      oomTip: '选择OOM时，OOM诊断任务和存储IO性能分析任务不能同时运行。',
      duration: '诊断时长（s）',
      duration_range: '（1~60000）',
      duration_placeholder: '默认持续到程序结束',
      interval: '采样间隔（ms）',
      interval_tip: '注意：间隔越小，对分析进程的性能影响越大',
      samplingDelay: '诊断开始时间（s）',
      switch: '配置指定节点参数',
      assemblyLocation: '二进制/符号文件路径',
      sourceLocation: 'C/C++源文件路径',
      collectStack: '采集调用栈',
      collectSize: '采集文件大小（MiB）',
      collectSize_range: '（1~100）',
      scheduled_timing: '预约定时启动',
      taskName_placeholder: '请输入任务名称',
      memory_leakage: '内存泄漏',
      memory_consumption: '内存消耗',
      memory_abnormal: '内存越界',
      memory_overwriting: '内存越界',
      exception_tip: '请使用GCC 4.9及以上版本重新编译程序，并且要求...',
      exception_tip_detail: `请使用GCC 4.9及以上版本重新编译程序，并且要求：<br/>\
     • 必须使用 -fsanitize=address 选项<br/>\
     • 必须使用 -g 选项<br/>\
     • 可选择使用 -fno-omit-frame-pointer 选项，以得到更容易理解的调用栈信息<br/>\
     • 可选择 -O1 或者更高的优化级别编译<br/>\
     例如：gcc -fsanitize=address -fno-omit-frame-pointer -O1 -g use-after-free.c -o use-after-free<br/>\
     编译完成的程序需要在GCC 4.9及以上版本的系统环境中运行`,
      stopException: '异常后终止分析',
      createTip: '如果glibc的版本低于2.33，分配器的统计信息可能会因为整型溢出而不准确'
    },
    exception: {
      exception_type: '越界类型：',
      access_type: '访问类型：',
      access_stack: '越界访问点：',
      help: '辅助信息：',
      more_detail: '查看更多信息',
      more_detail_title: '内存越界更多信息'
    },
    consumption: {
      consumption: '内存消耗',
      site: '地址',
      apply: '应用',
      process_map: '进程内存MAP信息',
      distributor: '分配器',
      mem_size: '物理内存大小',
      summury: {
        rss_peak: '物理内存峰值（KB）',
        vss_peak: '虚拟内存峰值（KB）',
        malloc_peak: '申请内存峰值',
        malloc_count: '申请总次数',
        malloc_size: '申请内存总大小',
        free_count: '释放总次数',
        free_size: '释放总字节数',
        leak_count: '泄漏总次数',
        leak_size: '泄漏总字节数',
        system_bytes_peak: '分配器分配内存峰值',
        in_use_bytes_peak: '分配器使用内存峰值',
        free_bytes_peak: '分配器空闲内存峰值',
        arena: '分配器Arena数峰值',
        mmap_count_peak: 'mmap区域数量峰值',
        mmap_size_peak: 'mmap区域大小峰值',
      },
      sequence: {
        rss: '物理内存',
        vss: '虚拟内存',
        malloc_size: '申请内存',
        malloc_count: '申请次数',
        free_count: '释放次数',
        free_size: '释放内存',
        system_bytes: '分配器分配内存',
        free_bytes: '分配器空闲内存',
        in_use_bytes: '分配器使用内存',
        arena: '分配器Arena数',
        mmap_count: 'mmap区域数量',
        mmap_size: 'mmap区域大小',
      },
    },
    searchFunction: '搜索函数',
    filterSelfLeakText: '自身内存泄漏函数',
    filterSelfReleaseText: '自身内存异常释放函数',
    filterAllText: '全部函数',
    tab: {
      sourceCode: '源码',
    },
    table: {
      memReleaseHead1: 'malloc申请，delete释放',
      memReleaseHead2: 'malloc申请，delete[]释放',
      memReleaseHead3: 'new申请，free释放',
      memReleaseHead4: 'new申请，delete[]释放',
      memReleaseHead5: 'new[]申请，delete释放',
      memReleaseHead6: 'new[]申请，free释放',
      memReleaseHead7: 'malloc申请，munmap释放',
      memReleaseHead8: 'new申请，munmap释放',
      memReleaseHead9: 'realloc申请，delete释放',
      memReleaseHead10: 'realloc申请，delete[]释放',
      memReleaseHead11: 'realloc申请，munmap释放',
      memReleaseHead12: 'valloc申请，delete释放',
      memReleaseHead13: 'valloc申请，delete[]释放',
      memReleaseHead14: 'valloc申请，munmap释放',
      memReleaseHead15: 'mmap申请，delete释放',
      memReleaseHead16: 'mmap申请，delete[]释放',
      memReleaseHead17: 'mmap申请，free释放',
      memReleaseHead18: 'mmap申请，delete释放',
      memReleaseHead19: 'mmap申请，delete[]释放',
      memReleaseHead20: 'mremap申请，free释放',
      memReleaseHead21: 'calloc申请，delete释放',
      memReleaseHead22: 'calloc申请，delete[]释放',
      memReleaseHead23: 'calloc申请，munmap释放',
      mallocLine: '申请行号',
      mallocFile: '申请文件',
      mallocFunc: '申请点',
    },
    stack: {
      nodeTipBtn: '查看源码',
      memLeakTable: {
        memLeakTimes: '泄漏次数',
        memLeakSize: '泄漏大小',
        memLeakTableSelf: '自身内存泄漏',
        memLeakTableChild: '子程序内存泄漏',
        memReleaseTableSelf: '自身内存异常释放',
        memReleaseTableChild: '子程序内存异常释放',
      },
      invocationDepth: '调用深度',
      beInvocationDepth: '被调用深度',
      stackInfo: '展示节点：{0}/总节点：{1}',
      unlimited: '不限'
    },
    memException: {
      memLeakTimes: '内存泄漏次数',
      memLeakSize: '内存泄漏大小',
      memAbnormalRelease: '内存异常释放次数',
    },
    sourceCode: {
      legend: {
        selfMemLeak: '自身内存泄漏',
        childMemLeak: '子程序内存泄漏',
        selfAbnormalRelease: '自身异常释放',
        childAbnormalRelease: '子程序异常释放'
      }
    },
    memReleaseType: '异常释放类型',
    noLeak: '当前进程无内存泄漏',
    noLeakApp: '当前应用无内存泄漏',
    noAbnormalRelease: '当前进程无内存异常释放',
    noException: '当前进程无内存越界',
    dialingTest: '拨测统计信息：',
    transferredData: '传输数据量（MB）',
    bandwidth: '带宽（Mbits/s）',
    windowSize: '窗口大小（MB）',
    timeInterval: '时间间隔（s）',
  },
  oomDetail: {
    basicTitle: '基本信息',
    callStackTitle: '调用栈信息',
    systemMemoryTitle: '系统内存信息',
    processMemoryTitle: '进程内存信息',
    totalRecords: '总条数',
    jumpTo: '跳转',
    viewDetails: '查看详细信息',
    oomDetailsTitle: 'OOM详细信息',
    shutdown: '关闭',
    placeholder: '请输入内容',
    timeLine: '时间点',
    trigger: '触发者',
    killer: '被杀者'
  },
  popInfo: {
    TOP10_process: '进程/线程绑核信息',
    nuclear_tied: '已绑核',
    untied_nuclear: '未绑核',
    Irq: '硬中断绑核信息',
    Irq_cpu: 'CPU硬中断绑核信息',
    Xps: 'XPS/RPS绑核信息',
    Xps_cpu: '设备队列绑核信息',
    Xps_title: '设备队列信息',
    Xps_core: 'XPS绑核信息',
    Rps_core: 'RPS绑核信息',
    Xps_num: 'XPS绑核数量',
    Rps_num: 'RPS绑核数量',
    all: '全部设备中断',
    other: '其他',
    allIrq: '全部中断事件'
  },
  pcieDetailsinfo: {
    processBindingTitle: 'TOP10 进程绑核状态',
    cpuView: 'cpu核视图',
    processView: '进程视图',
    interruptsView: '中断编号视图',
    hardInterruptTitle: '硬中断绑核状态',
    xrsBindingTitle: 'XPS/RPS绑核状态',
    bindingState: '绑核状态',
    processTitle1: 'PID/TID',
    processTitle2: '进程名称',
    processTitle3: '绑核信息',
    processTitle4: 'CPU core',
    processTitle5: '绑定在核上的top10进程线程信息',
    operation: '操作',
    viewMore: '查看',
    interrupttitle1: '中断编号',
    interrupttitle2: '设备中断信息',
    interrupttitle3: '中断次数',
    xpsTitle1: '网口队列编号',
    xpsTitle2: '设备信息队列',
    cmd: 'cmd信息',
    disk_name: '设备名称',
    disk_info: '设备信息',
    interrupt: '中断事件',
    interrupt_number: '中断数',
    disk_list_info: '设备信息',
    io_value_sumury: 'IO大小分布统计',
    io_delay_sumury: 'IO时延分布统计',
    range: '范围',
    read: '读IO频率（次/s）',
    write: '写IO频率（次/s）',
    scheduling_algorithm: '调度算法 ',
    detail_item: '配置项',
    value: '值',
    all_hardware: '所有硬中断频率',
    show_all_hardware: '显示所有硬中断频率',
    other_hardware: '其他硬中断频率',
    cpu_usage: '显示CPU利用率',
    cpu_usage_percent: 'CPU利用率（%）',
    percent: '利用率',
    selected_hardware: '已筛选的其它硬中断频率',
    user: '用户态',
    sys: '内核态',
    hard: '硬中断',
    soft: '软中断',
    hard_inter: '硬中断频率',
    soft_inter: '软中断频率',
    filter: '筛选硬中断',
    interrupt_num: '中断频率（次/s）',
    tip: '；内核态CPU利用率不包含软、硬中断服务的消耗',
    tip_1: '只显示非0统计数据',
    otherTip: '；其它硬中断频率 = 所有硬中断频率 - 已筛选硬中断频率',
    units: '次/s'
  },
  tuninghelper: {
    SelectedNodeList: '已选节点列表',
    currentNode: '当前节点',
    commonTableTooltip: {
      read_ahead_kb: '磁盘文件预读',
      scheduler: '磁盘IO调度机制',
      rq_affinity: '磁盘请求亲和',
      nr_requests: '磁盘请求队列长',
      queue_depth: '磁盘队列深度',
      nomerges: '磁盘IO合并',
      write_cache: '磁盘写机制',
      level: 'raid卡级别',
      strip_size: '在每个磁盘上连续写入数据的总量,也称作“条带深度”。LSI SAS3108支持多种条带单元，包括64KB、128KB、256KB、512KB及1MB。默认配置为256KB。配置RAID时一般采用默认值。',
      read_policy: '虚拟磁盘数据的读策略，分以下两种：Normal：关闭预读取功能（No Read Ahead）。Ahead：使能预读取功能。控制器可以预读取顺序数据或预测需要即将使用到的数据并存储在Cache中。',
      write_policy: '虚拟磁盘数据的写策略。LSI SAS3108不同版本的Firmware可配置的策略不同，主要区别是：当LSI SAS3108的Firmware版本为4.270.00-4382及以下时，写策略分为以下三种：• Write Back：当控制器Cache收到所有的传输数据后，将给主机返回数据传输完成信号。• Write Through：当磁盘子系统接收到所有传输数据后，控制器将给主机返回数据传输完成信号。• Write Back with BBU：在控制器无BBU（Battery Backup Unit）、BBU处于充放电状态、BBU损坏或Pinned/Preserved Cache达到RAID卡物理Cache容量的50%时，RAID控制卡将自动切换到Write Through模式。该设置为推荐设置的标准模式。当LSI SAS3108的Firmware版本为4.650.00-6121及以上时，写策略分为以下三种• Write Back：在RAID控制卡无BBU（Battery Backup Unit）、BBU处于充放电状态、BBU损坏或Pinned/Preserved Cache达到RAID卡物理Cache容量的50%时，RAID控制卡将自动切换到Write Through模式。该设置为推荐设置的标准模式。• Write Through：当磁盘子系统接收到所有传输数据后，控制器将给主机返回数据传输完成信号。• Always Write Back：当控制器Cache收到所有的传输数据后，将给主机返回数据传输完成信号。说明：“Always Write Back”模式下，当电容不在位或在充电状态下，RAID卡中DDR的写数据将会丢失。不推荐使用该模式。',
      io_policy: '应用于特殊的虚拟磁盘读取，不影响预读取Cache。分以下两种：Direct：在读场景中，直接从硬盘读取数据。（“Read Policy”设置为“Ahead”时除外，此时读数据经过RAID卡的Cache处理。）；在写场景中，写数据经过RAID卡的Cache处理。（“Write Policy”设置为“Write Through”时除外，此时写数据不经过RAID卡的Cache处理，直接写入硬盘。）Cached：所有读和写均经过RAID卡Cache处理。仅在配置CacheCade 1.1时需要设置为此参数值，其他场景不推荐。',
      drives: '组成raid的磁盘'
    },
    compare: {
      compareInfo: '对象信息',
      showType: '显示类型',
      diffParams: '显示不一致参数',
      allParams: '显示全部参数',
      same: '相同',
      compareObject: '对比对象',
      compareValue: '对比值（%）',
      object1: '对象1',
      object2: '对象2',
      node: '节点',
      node1: '节点1',
      node2: '节点2',
      hotFunction: {
        functionName: '函数名',
        moduleText: '模块',
      },
    },
    taskDetail: {
      serviceType: '业务类型',
      cpuIntensive: 'CPU密集型',
      suggestionScope: '建议范围',
      allSuggestion: '全部建议',
      filterSuggestion: '经过阈值过滤的建议',
      networkIntensive: '网络IO密集型',
      storageIntensive: '存储IO密集型',
      systemConfig: '系统配置',
      hotFunction: '热点函数',
      systemPerf: '系统性能',
      processPerf: '进程/线程性能',
      systemConfigData: '系统配置详细数据',
      hotFunctionData: '热点函数详细数据',
      systemPerfData: '系统性能详细数据',
      processPerfData: '进程/线程性能详细数据',
      cpuTarget: 'CPU指标',
      thresholdSectionConfig: '利用率区间',
      thresholdSectionConfigTip: '设置利用率区间',
      switchCoreViewTip: '切换视图',
      coreViewNoDataTip: 'CPU利用率均不在此区间',
      coreConfig: '运行的进程线程',
      hardInterrupts: '硬中断',
      softInterrupts: '软中断',
      command: '命令',
      deviceName: '设备名',
      interruptNo: '中断编号',
      interruptNumPer: '每间隔中断次数',
      type: '类型',
      viewStack: '查看调用栈',
      operationSys: '操作的系统调用',
      operationFile: '操作的文件',
      operationNetport: '操作的网口',
      viewThread: '查看相关线程',
      systemProcessTop50: '系统进程TOP 50',
      relatedProcess: '相关进程',
      and: '及',
      indicatorInfo: '指标信息',
      micIndicator: '微架构指标',
      memoryAccessIndicator: '访存指标',
      cpuAffinity: 'CPU亲和性',
      memoryAffinity: '内存亲和性',
      metrics: '指标',
      value: '值',
      noObjectView: '无可查看对象',
      noCallStack: '该函数未查询到调用栈',
      noCommandLine: '未查询到cmdline信息',
      processNUMA: '进程内存段NUMA分布',
      indicatorInfo_detail: 'CPU{0}指标详细数据',
      compareValue: '对比值（%）',
      compareValueNoPercent: '对比值',
      objectSecond: '对象2',
      objectFirstIrq: '对象1中断频率',
      objectSecondIrq: '对象2中断频率',
      objectFirstUsage: '对象1CPU利用率',
      objectSecondUsage: '对象2CPU利用率',
      usage_and_irq: '利用率&中断事件',
      distribution_view: '分布视图',
      sys_usage: '内核态利用率',
      user_usage: '用户态利用率',
      irq_usage: '硬中断利用率',
      soft_usage: '软中断利用率',
      processIndicator: '线程指标',
      micInfo: '微架构信息',
      comparisonResult: '对比结果',
      comparisonValue: '对比值',
      objectOne: '对象1',
      objectTwo: '对象2',
      comparisonObject: '对比对象',
      identical: '相同',
      process_num: '进程/线程数'
    },
    sysConfigDetail: {
      nodeForm: '节点形态',
      kernelVersion: '内核版本',
      osVersion: 'OS版本',
      mem: '内存',
      disk: '存储',
      net: '网络',
      osConfig: 'OS配置',
      cpuModel: 'CPU型号',
      coreCount: 'Core数量',
      cpuType: 'CPU类型',
      maxFrequency: '最大频率（MHz）',
      currFrequency: '当前频率（MHz）',
      cpuMaxFrequency: 'cpu最大时钟频率',
      cpuCurrFrequency: 'cpu当前时钟频率',
      numaNode: 'NUMA节点',
      numaBalance: 'NUMA平衡',
      node: '节点',
      cpuCore: 'CPU核',
      totalMem: '总内存大小（MiB）',
      freeMem: '空闲内存大小（MiB）',
      numaNodeDistance: 'NUMA节点间距离',
      cacheInfo: 'Cache信息',
      cacheInfoTip1: '一级缓存（数据）',
      cacheInfoTip2: '一级缓存（指令）',
      cacheInfoTip3: '二级缓存',
      cacheInfoTip4: '三级缓存',
      totalSize: '总容量',
      totalBandwidth: '总带宽',
      maxSpeedMts: '最大速率（MT/s）',
      bandwidthMbs: '带宽（MiB/s）',
      capacityGb: '容量（GiB）',
      diskInfo: '存储信息',
      deviceName: '设备名称',
      diskCapacityTb: '硬盘容量',
      diskType: '硬盘类型',
      diskModel: '硬盘型号',
      config: '配置',
      raidConfigInfo: 'RAID配置信息',
      fileSystem: '文件系统',
      mountedOn: '挂载点',
      type: '类型',
      partition: '分区',
      netBond: '网络绑定',
      netInterface: '网络网口',
      network: '网络接口',
      irqInfo: '中断信息',
      irqDistribute: '中断分布',
      netportIrqDistribute: '网口中断分布',
      allIrq: '全部中断事件',
      irqHardBondNumber: '硬中断绑定个数',
      rpsBondNumber: 'rps绑定个数',
      xpsBondNumber: 'xps绑定个数',
      physical: '物理机',
      vm: '虚拟机',
      on: '开启',
      off: '关闭',
      hardIrqBond: '硬中断绑定',
      rpsBond: 'RPS绑定',
      xpsBond: 'XPS绑定',
    },
    treeDetail: {
      thresholdSetting: '阈值设置',
      detail: '详情',
      currentValueText: '采集值：',
      avgValueText: '平均采集值：',
      apply: '应用',
      reset: '重置',
      relavantConfig: '相关配置',
      collectedValue: '采集值',
      threshold: '阈值',
      cpuIndicator: 'CPU指标',
      relavantIndicator: '相关性能指标',
      optimizationSug: '优化建议',
      optimizationGuide: '优化指导',
      adopted: '已采纳',
      noAdopted: '未采纳',
      adoptedTip1: '*建议一经采纳将会保留在',
      adoptedTip2: '关联报告',
      adoptedTip3: '中，以辅助您进一步分析',
      indicatorDesc: '指标说明',
      cpuCore: 'CPU核',
      btnProcessThreadAnalysisUser: '查看TOP %user进程',
      btnProcessThreadAnalysisSystem: '查看TOP %system进程',
      btnViewDetail: '查看详情',
      btnCreateTask: '创建任务',
      btnRestartTask: '重启任务',
      viewReport: '查看报告',
      createSysProjectTip: '将在系统性能分析中为节点{0}创建{1}工程，是否确认创建？',
      createDiagnoseProjectTip: '将在系统诊断中为节点{0}创建{1}工程，是否确认创建？',
      ioIntensive: 'IO密集型',
      noIoIntensive: '非IO密集型',
      optimizationFunction: '可优化函数',
    },
    record: {
      analysisPath: '分析路径',
      suggest: '已采纳的优化建议',
      effective: '有效',
      invalidation: '无效',
      taskNotExists: '任务不存在',
      noaccept: '无已采纳建议 ',
    },
    memory_access_indicator: {
      accesscount_r: '访问DDR总次数（读）',
      accesscount_w: '访问DDR总次数（写）',
      localaccess_r: '本地访问DDR总次数（读）',
      localaccess_w: '本地访问DDR总次数（写）',
      spanchip_r: '跨片访问DDR次数（读）',
      spanchip_w: '跨片访问DDR次数（写）',
      spandie_r: '跨DIE访问DDR次数（读）',
      spandie_w: '跨DIE访问DDR次数（写）',
    },
    detailedData: {
      sysperf_memory: '内存',
      sysperf_Storage: '存储',
      sysperf_network: '网络',
      runing_process_thread: '运行的进程/线程',
      runing_process: '运行的进程',
      hard_irq: '中断信息',
      soft_irq: '软中断信息',
      irq_type: '中断类型',
      irq_frequency: '中断频率（次/s）',
      frequency: '次/s',
      cpuContextSwitch: '任务创建和上下文切换统计',
      proc_tip: '每秒创建的进程数',
      cswch_tip: '每秒发生的上下文切换次数',
      show_cpu_usage: '显示CPU利用率',
      metric: '指标信息',
      micro_metrics: '微架构指标',
      access_metrices: '访存指标',
      cpu_affinity: 'CPU亲和性',
      memory_affinity: '内存亲和性',
      process_numa: '进程内存段NUMA分布',
      hot_func: '热点函数',
      handle_file: '操作的文件',
      handle_port: '操作的网口',
      sys_call: '系统调用',
      soft_map: '软中断分布',
      rps_bound: 'RPS绑核信息',
      xps_bound: 'XPS绑核信息',
      hard_bound: '硬中断绑核信息',
      netPort_name: '网络接口名称',
      fliterIrq: '筛选硬中断',
      cpuUsage: "CPU利用率（%）",
    },
    processDetailData: {
      analyzedApplicationsProcesses: '被分析应用/进程',
      allProcess: '所有进程',
      viewDetailInvokingInfo: '查看详细调用信息',
      hotFuncTipText: '您可在【系统性能分析工具】中创建【热点函数分析】以进一步查看热点函数源码等信息',
      startAddress: '起始地址',
      module: '模块',
      mapType: '映射类型',
      mapQuantity: '映射数量',
      modifiedQuantity: '修改数量',
      memoryPage: '内存页大小（KiB）',
      loadStatistics: '负载统计',
      faultStatistics: '故障统计',
      allFunc: '全部函数',
      isSugFunc: '仅查看有优化建议的函数',
    },
    tips: {
      network: {
        rxcmp: '每秒钟接收的压缩包数据包',
        txcmp: '每秒钟发送的压缩包数据包',
        rxmcst: '每秒钟接收的多播数据包',
      }
    }
  },
  disgnose: {
    netIO: {
      memDis: '内存段NUMA分布',
      startAddress: '起始地址',
      module: '模块',
      mapType: '映射类型',
      mapQuantity: '映射数量',
      modifiedQuantity: '修改数量',
      memoryPage: '内存页大小（KB）',
      memoryConsumption: 'CPU/内存消耗',
      CPUAffinity: 'CPU亲和性',
      memoryAffinity: '内存亲和性',
      networkPPS: '网络PPS',
      networkThroughput: '网络吞吐量'
    },
  },
  configuration: {
    scenario: '拨测场景',
    type: 'IP协议类型',
    num: '组网参数',
    serverIp: '服务端任务节点',
    serverBindIp: '服务端IP',
    listenPort: '服务端端口',
    clientIp: '客户端任务节点',
    clientBindIp: '客户端IP',
    client_net_port: '客户端网口',
    connectPort: '客户端端口',
    high_num: '拨测高级参数',
    serverCPUAffinity: '服务端CPU亲和性',
    clientCPUAffinity: '客户端CPU亲和性',
    interval: '报告间隔（ms）',
    bandwidth: '拨测带宽（MB/s）',
    duration: '拨测时长（s）',
    msgLenAll: '拨测报文总长（byte）',
    blockCount: '拨测报文包数',
    msgLen: '拨测报文长度（KB）',
    concurrency: '并发连接数',
    packetSize: '套接字缓冲区（byte）',
    MSSLen: 'MSS长（byte）',
    zeroCopy: '支持零拷贝',
    loadDuration: '采集时长',
    loadInterval: '采集间隔',
    obj: '诊断对象',
    io: '网络IO',
    env: '诊断场景',
    envtype: '网络拨测',
  },
  network_diagnositic: {
    analysis_type: '网络IO诊断分析',
    net_dial_test: '网络拨测参数',
    packetLoss: '丢包诊断参数',
    load: '网络负载监控参数',
    netCaught: '网络抓包参数',
    netCaughtTip: '网络抓包功能依赖系统访问控制配置<br/>使用SElinux访问控制方式的系统：<br/>SElinux配置需要改为Disabled\
    或Permissive（无需重启的修改：setenforce0）<br/>使用Apparmor访问控制方式的系统：<br/>tcpdump对应配置需要改为complain\
    （aa-complain/usr/sbin/tcpdump，该命令需要安装对应utils工具，apt-get install apparmor-utils）',
    taskParams: {
      connection: '连通性拨测',
      tcp: 'TCP拨测',
      udp: 'UDP拨测',
      diagnositic_scen: '诊断功能',
      dial_test_scen: '拨测场景',
      ip_type: 'IP协议类型',
      node_info: '节点信息',
      networking: '组网参数',
      task_node: '任务节点',
      task_node_txt: '丢包诊断、网络抓包、网络负载监控共用此任务节点',
      source_ip: '源IP',
      source_network_port: '源端网口',
      target_server_ip: '目标服务器IP',
      add: '添加',
      server_task_node: '服务端任务节点',
      server_ip: '服务端IP',
      server_port: '服务端端口',
      client_task_node: '客户端任务节点',
      client_ip: '客户端IP',
      client_network_port: '客户端网口',
      client_port: '客户端端口',
      network_dial_test: '网络拨测',
      packet_loss: '丢包诊断',
      network_capture: '网络抓包',
      network_load: '网络负载监控',
      reservation: '预约定时启动',
      immediate: '立即执行',
      curr_server_time: '当前服务器日期和时间',
      collection_time: '采集时间',
      collection_date: '采集日期',
      confirm: '确认',
      cancel: '取消',
      save_temp: '保存为模板',
    },
    advanced_param: {
      dial_test_limit: '拨测限值',
      advanced_param: '拨测高级参数',
      message_length_unit: '拨测报文长度（B）',
      message_length: '拨测报文长度',
      connect_msg_len: '拨测报文长度（byte）',
      packetSize: '拨测报文长度',
      interval: '拨测间隔（ms）',
      duration: '拨测时长（s）',
      sharding_strategy: '分片策略',
      ttl: 'TTL',
      server_CPU_affinity: '服务端CPU亲和性',
      client_CPU_affinity: '客户端CPU亲和性',
      reporting_interval: '报告间隔（ms）',
      bandwidth: '拨测带宽',
      message_total_length: '拨测报文总长',
      package_num: '拨测报文包数',
      concurrent_connectivity: '并发连接数',
      bufferZone: '套接字缓冲区（byte）',
      mss: 'MSS长（byte）',
      zero_copy: '支持零拷贝'
    },
    network_load_param: {
      net_load_param: '网络负载监控参数',
      collection_time: '采集时长（s）',
      collection_interval: '采集间隔（s）'
    },
    tips: {
      reserv_title_tip: '请参考当前服务器的日期和时间指定预约任务的日期和时间',
      collen_date_tip: '指定采集时间和实际开始采集时间间隔不大于10s',
      pop_content: '工具将采集您的软件运行数据并关联源码，以便分析系统性能指标，给出调优建议，不会影响您的软件运行，也不会保留您的源码',
      CPUAffinityTip: '请输入CPU核编号。例如2-5，2,3,4,5或2,3,4-5',
      zeroCopyTip: '使用“零拷贝”办法来发送数据，比如使用sendfile(2)代替write(2).这会减少CPU的占用率',
      clientProtTip: '客户端本地端口',
      sharding_strategyTip: 'do：禁止分布，即使包丢弃；want：当包过大时分片；dont：不设置分片DF标志',
      mssTip: 'TCP的最大分片长度',
      protocolTip: '未筛选表示可抓取所有协议类型的数据<br>选择时抓取对应的协议类型数据（支持多选）<br/>仅选择ICMP、ARP、RARP中的一\
      个或多个时，不能输入端口筛选参数',
    }
  },
  sysPerfDetailed: {
    file_info_title: '文件系统',
    statistics: '访存统计信息',
    processUsage: '进程内存利用率',
    huge: '大页内存利用率',
    swap: 'SWAP利用率',
    numa: 'NUMA统计信息',
    totalRead: '访问总次数（读）',
    totalWrite: '访问总次数（写）',
    localRead: '本地访问次数（读）',
    localWrite: '本地访问次数（写）',
    dieRead: '跨DIE访问次数（读）',
    dieWrite: '跨DIE访问次数（写）',
    crossRead: '跨片访问次数（读）',
    crossWrite: '跨片访问次数（写）',
    equipCon: '设备消耗',
    netCon: '网络IO消耗',
    diskInfo: '硬盘信息',
    loadStatistics: '负载统计',
    faultStatistics: '故障统计',
    openFile: '设备上打开的文件',
    raidInfo: 'RAID配置信息',
    tcpUdp: '建立的TCP/UDP链接',
    interConfig: '中断配置',
    prefetch: '磁盘文件预读',
    mechanism: '磁盘IO调度机制',
    affinity: '磁盘请求亲和',
    lengthQueue: '磁盘请求队列长度',
    queueDepth: '磁盘队列深度',
    combination: 'IO合并',
    WriteMechanism: '写机制',
    mountPoint: '挂载点',
    parameters: '挂载参数',
    portVersion: '网口驱动及版本',
    aggregation: '网口中断聚合配置',
    uninstallation: '网口卸载配置',
    queueConfiguration: '网口队列配置',
    bufferConfiguration: '网口Ring Buffer配置',
    Kbswpcad: '缓存交换内存量（以千字节为单位）',
    '%swpcad': '缓存交换内存相对于使用的交换空间量的百分比',
    disks: '物理盘信息',
    netDriver: '网口驱动',
    netVersion: '网口驱动版本',
    '%memused': '已使用内存的百分比'
  },
  common_advice_feedback: '建议反馈',
  common_connect_fail: '连接失败',
  common_connect_fail_reason: '网络连接请求失败,可参考如下方式进行建议反馈：',
  common_connect_fail_reason1: '1.请检查网络后，重新点击',
  common_connect_fail_reason2: '进行建议反馈。',
  common_connect_fail_reason3: '2.通过手机扫描以下二维码进行建议反馈。',
  common_term_link_feedback: '上鲲鹏社区，反馈建议',
  compareCreate: {
    tuningAnalysis: '调优分析',
    comparAnalysis: '对比报告',
    createCompare: '新建对比分析任务',
    selectCompare: '选择对比对象',
    createTip: '请选择集群配置相当的服务器进行对比，否则会造成对比结果差异过大。对比值 = 对象1-对象2',
    object1: '对象1',
    object2: '对象2',
    tool: '所属工具',
    delProject: '删除工程与对比任务',
    delTask: '删除任务与对比任务',
    delProjectTip: '您是否确认删除${project}工程, 与其相关的以下对比分析任务也会被同步删除',
    delTaskTip: '您是否确认删除${project}任务, 与其相关的以下对比分析任务也会被同步删除',
  },
  common_term_process_name_tip: '进程名称中包含以下非法字符（$|;&><`!空格）',
  hpc_project_node_select_title: {
    memAccessAnalysis: 'HPC场景下访存分析最多支持10个节点',
    resourceAnalysis: 'HPC场景下资源调度分析最多支持10个节点',
    syslockAnalysis: 'HPC场景下锁与等待分析最多支持10个节点',
  },
  storageIo: {
    analysis_type: '存储IO诊断分析',
    storage_io: '存储诊断',
    storage_io_select: '存储诊断为必选',
    sys_load: '系统负载监控',
    storageInterval: '采样间隔（s）',
    storageInterval_range: '（2~300）',
    cycleOn: '周期统计',
    cycleOn_toolTip: '自定义数据的统计周期',
    cycleOn_tip: '不开启时按照500ms间隔统计数据',
    cyclePeriod: '统计周期（ms）',
    cyclePeriod_toolTip: '统计一次数据的时间间隔',
    cyclePeriod_placeholder: '请输入统计周期',
    storageInterval_tip: '采样间隔应小于或等于采集时长的1/2且最大为10秒',
    cyclePeriod_tip: '统计周期应小于或等于采集时长且最大值为5000毫秒',
    pressObj: {
      nodeName: "节点名称",
      nodeIp: "节点IP",
      fileName: "逻辑盘名或文件名",
      pressTip1: "1.针对文件的压测会破坏其现有数据，所以压测对象不要填写已经存在的文件，以免造成文件覆盖；针对对逻辑盘的压测不要填写已经挂载文件系统的盘。",
      pressTip2: "2.压测对象请不要填写Hyper Tuner工具server端安装所在逻辑盘或该逻辑盘下的文件，压测过程中存储IO过于繁忙会导致工具异常。",
      pressTip3: "3.压测对象如果填写的是文件，请压测完成后，手动删除该文件。如果工具卸载或删除节点，会自动删除。",
      pressObj: "压测对象",
      placeholder: "可以输入至多5个逻辑盘或文件名，分别用“;”隔开"
    },
    keyMetric: {
      keyMetric: '关键指标',
      required: '该配置项为必填项',
      addModel: '添加模型',
      throughput: '吞吐量',
      delay: '时延',
      blockSize: '请求块大小（KB）',
      type: '读写模式',
      read: '顺序读',
      write: '顺序写',
      rw: '顺序读写',
      randRead: '随机读',
      randWrite: '随机写',
      randRw: '随机读写',
      rate: '读写比例',
      ioDepth: 'I/O队列深度',
      ioEngine: 'I/O引擎',
      concurrency: '并发度',
      ioSize: 'I/O大小（GB）',
      testTime: '测试时长（s）',
      relateMetric: '相关指标',
      operation: '操作',
      operationTip: '对表格数据执行的修改删除操作，将会同步至使用该数据的模板中。',
      add: '添加',
      cancel: '取消',
      save: '保存',
      delete: '删除',
      edit: '编辑'
    }
  }
};
